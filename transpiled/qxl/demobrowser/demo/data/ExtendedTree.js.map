{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/data/ExtendedTree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "colors",
    "nodes",
    "i",
    "qxl",
    "demobrowser",
    "demo",
    "data",
    "model",
    "Node",
    "setName",
    "setColor",
    "parseInt",
    "Math",
    "random",
    "getChildren",
    "push",
    "tree",
    "ui",
    "Tree",
    "getRoot",
    "add",
    "left",
    "top",
    "setWidth",
    "setHeight",
    "treeController",
    "controller",
    "setDelegate",
    "bindItem",
    "item",
    "id",
    "bindProperty",
    "setOpen",
    "colorButton",
    "form",
    "Button",
    "addListener",
    "length",
    "logDataButton",
    "info",
    "toString",
    "description",
    "basic",
    "Label",
    "setRich",
    "setValue",
    "ExtendedTree"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * @tag noPlayground\n * @tag databinding\n * @tag delegate\n */\nqx.Class.define(\"qxl.demobrowser.demo.data.ExtendedTree\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    main: function()\n    {\n      this.base(arguments);\n\n      var colors = [\"red\", \"blue\", \"green\", \"black\", \"gray\", \"yellow\"];\n\n      // create the data\n      var nodes = [];\n      for (var i = 0; i < 50; i++) {\n        nodes[i] = new qxl.demobrowser.demo.data.model.Node();\n        nodes[i].setName(\"Item \" + i);\n        nodes[i].setColor(colors[i % 6]);\n        // if its not the root node\n        if (i != 0) {\n          // add the children in some random order\n          nodes[parseInt(Math.random() * i)].getChildren().push(nodes[i]);\n        }\n      }\n\n\n      // create the tree\n      var tree = new qx.ui.tree.Tree();\n      this.getRoot().add(tree, {left: 10, top: 80});\n      tree.setWidth(250);\n      tree.setHeight(300);\n\n      // bind the widget to the data with the controller\n      var treeController = new qx.data.controller.Tree(nodes[0], tree, \"children\");\n      treeController.setDelegate({\n        bindItem : function(controller, item, id) {\n          controller.bindProperty(\"name\", \"label\", null, item, id);\n          controller.bindProperty(\"color\", \"textColor\", null, item, id);\n        }\n      });\n\n      // open the root node\n      tree.getRoot().setOpen(true);\n\n\n\n\n      /* ***********************************************\n       * Controlls: Do only work on the data array\n       * ********************************************* */\n      var colorButton = new qx.ui.form.Button(\"all boring black\");\n      colorButton.setWidth(120);\n      this.getRoot().add(colorButton, {left: 280, top: 80});\n      colorButton.addListener(\"execute\", function() {\n        for (var i = 0; i < nodes.length; i++) {\n          nodes[i].setColor(\"black\");\n        }\n      }, this);\n\n      var logDataButton = new qx.ui.form.Button(\"Write data to log\");\n      logDataButton.setWidth(120);\n      this.getRoot().add(logDataButton, {left: 280, top: 115});\n      logDataButton.addListener(\"execute\", function() {\n        // push the data in the consoleListController.html\n        this.info(nodes[0].toString());\n      }, this);\n\n\n\n\n\n\n      /* ***********************************************\n       * DESCRIPTIONS\n       * ********************************************* */\n      var description = new qx.ui.basic.Label();\n      description.setRich(true);\n      description.setWidth(300);\n      description.setValue(\n        \"<b>A tree configures with bindItem</b><br/>\"\n        + \"The tree has bound its label to the name of the modeln and its \"\n        + \"textColor to some random colors.\"\n      );\n      this.getRoot().add(description, {left: 10, top: 10});\n    }\n  }\n});\n"
  ]
}