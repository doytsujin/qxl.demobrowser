{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/data/OwnCodeInModel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "list",
    "ui",
    "form",
    "List",
    "getRoot",
    "add",
    "left",
    "top",
    "controller",
    "data",
    "setLabelPath",
    "setIconOptions",
    "converter",
    "setIconPath",
    "delegate",
    "getModelMixins",
    "properties",
    "qxl",
    "demobrowser",
    "demo",
    "ItemsMixin",
    "url",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "store",
    "Json",
    "bind",
    "sortByTypeButton",
    "Button",
    "setWidth",
    "addListener",
    "getModel",
    "sortByType",
    "sortByNameButton",
    "sortByName",
    "syncListDescription",
    "basic",
    "Label",
    "setRich",
    "setValue",
    "Mixin",
    "dataArray",
    "getItems",
    "sort",
    "a",
    "b",
    "getType",
    "getName",
    "OwnCodeInModel"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/**\n *\n * @asset(qxl/demobrowser/demo/data/list.json)\n * @asset(qx/icon/${qx.icontheme}/16/mimetypes/*)\n * @tag databinding\n * @tag delegate\n * @ignore(qxl.demobrowser.demo.data.ItemsMixin)\n */\nqx.Class.define(\"qxl.demobrowser.demo.data.OwnCodeInModel\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    main: function()\n    {\n      this.base(arguments);\n\n      // create and add the list\n      var list = new qx.ui.form.List();\n      this.getRoot().add(list, {left: 10, top: 80});\n\n      // create the controller\n      var controller = new qx.data.controller.List(null, list);\n      // set the name for the label property\n      controller.setLabelPath(\"name\");\n      // set a converter for the icons\n      controller.setIconOptions({converter : function(data) {\n        return \"icon/16/mimetypes/\" + data + \".png\";\n      }});\n      // set the name of the icon property\n      controller.setIconPath(\"type\");\n\n      // create the store delegate\n      var delegate = {\n        getModelMixins: function(properties) {\n          // if the mixin for the items class is needed\n          if (properties == \"items\") {\n            return qxl.demobrowser.demo.data.ItemsMixin;\n          }\n        }\n      };\n\n      // create the data store\n      var url = qx.util.ResourceManager.getInstance().toUri(\"demobrowser/demo/data/list.json\");\n      var store = new qx.data.store.Json(url, delegate);\n\n      // connect the store and the controller\n      store.bind(\"model.items\", controller, \"model\");\n\n\n\n\n      /* ***********************************************\n       * Controlls: Do only work on the data array\n       * ********************************************* */\n      var sortByTypeButton = new qx.ui.form.Button(\"Sort By Type\");\n      sortByTypeButton.setWidth(120);\n      this.getRoot().add(sortByTypeButton, {left: 130, top: 80});\n      sortByTypeButton.addListener(\"execute\", function() {\n        // execute the new added method on the model\n        store.getModel().sortByType();\n      }, this);\n\n\n      var sortByNameButton = new qx.ui.form.Button(\"Sort By Name\");\n      sortByNameButton.setWidth(120);\n      this.getRoot().add(sortByNameButton, {left: 130, top: 110});\n      sortByNameButton.addListener(\"execute\", function() {\n        // execute the new added method on the model\n        store.getModel().sortByName();\n      }, this);\n\n\n\n      /* ***********************************************\n       * DESCRIPTIONS\n       * ********************************************* */\n      // List Selection sync description\n      var syncListDescription = new qx.ui.basic.Label();\n      syncListDescription.setRich(true);\n      syncListDescription.setWidth(410);\n      syncListDescription.setValue(\n        \"<b>Adding own code to the model</b><br/>\"\n        + \"Using the delegation to bring two sort function to the root model \"\n        + \"class of this demo. The buttons just calling those sort functions.\"\n      );\n      this.getRoot().add(syncListDescription, {left: 10, top: 10});\n    }\n  }\n});\n\n\n/**\n * Mixin for the items model containing two sort functions.\n */\nqx.Mixin.define(\"qxl.demobrowser.demo.data.ItemsMixin\",\n{\n  members : {\n    sortByType: function() {\n      var dataArray = this.getItems();\n      dataArray.sort(function(a, b) {\n        if (a.getType() > b.getType()) {\n          return 1;\n        } else if (a.getType() < b.getType()) {\n          return -1\n        } else {\n          return 0;\n        }\n      });\n    },\n\n    sortByName: function() {\n      var dataArray = this.getItems();\n      dataArray.sort(function(a, b) {\n        return a.getName() > b.getName() ? 1 : -1;\n      });\n    }\n  }\n});\n"
  ]
}