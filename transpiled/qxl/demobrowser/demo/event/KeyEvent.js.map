{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/event/KeyEvent.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "demobrowser",
    "demo",
    "event",
    "EventDemo",
    "members",
    "main",
    "_initLogger",
    "document",
    "getElementById",
    "events",
    "i",
    "length",
    "bom",
    "Element",
    "addListener",
    "documentElement",
    "logKeyEvent",
    "keyEvent",
    "type",
    "getType",
    "_log",
    "getKeyIdentifier",
    "getCharCode",
    "isShiftPressed",
    "isCtrlPressed",
    "isAltPressed",
    "preventDefault",
    "KeyEvent"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BC,SADtC;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,IAAI,EAAG,gBACP;AACE;;AAEA,aAAKC,WAAL,CACE,CAAC,OAAD,EAAU,gBAAV,EAA4B,WAA5B,EAAyC,OAAzC,EAAkD,MAAlD,EAA0D,KAA1D,CADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAFF,EAGE,EAHF;;AAMA,YAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,UAAjC,CAAb;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,MAAM,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EACA;AACElB,UAAAA,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAeC,WAAf,CACEP,QAAQ,CAACQ,eADX,EAEEN,MAAM,CAACC,CAAD,CAFR,EAGE,KAAKM,WAHP,EAIE,IAJF;AAMD;AACF,OArBH;AAwBEA,MAAAA,WAAW,EAAE,qBAASC,QAAT,EACb;AACE,YAAIC,IAAI,GAAGD,QAAQ,CAACE,OAAT,EAAX;;AACA,aAAKC,IAAL,CAAU,CACRF,IADQ,EAERA,IAAI,KAAK,UAAT,GAAsBD,QAAQ,CAACI,gBAAT,EAAtB,GAAoD,EAF5C,EAGRH,IAAI,IAAI,UAAR,GAAqBD,QAAQ,CAACK,WAAT,EAArB,GAA8C,EAHtC,EAIRL,QAAQ,CAACM,cAAT,EAJQ,EAKRN,QAAQ,CAACO,aAAT,EALQ,EAMRP,QAAQ,CAACQ,YAAT,EANQ,CAAV;;AAQAR,QAAAA,QAAQ,CAACS,cAAT;AACD;AApCH;AAJF,GADA;AAzBA3B,EAAAA,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2ByB,QAA3B,CAAoChC,aAApC,GAAoDA,aAApD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Keyhandler test converted to use the low level event API.\n *\n * @tag noPlayground\n * @tag showcase\n */\nqx.Class.define(\"qxl.demobrowser.demo.event.KeyEvent\",\n{\n  extend : qxl.demobrowser.demo.event.EventDemo,\n\n  members :\n  {\n    main : function()\n    {\n      this.base(arguments);\n\n      this._initLogger(\n        [\"Event\", \"Key identifier\", \"Char code\", \"Shift\", \"Ctrl\", \"Alt\"],\n        document.getElementById(\"logger\"),\n        50\n      );\n\n      var events = [\"keydown\", \"keypress\", \"keyup\", \"keyinput\"];\n      for (var i=0; i<events.length; i++)\n      {\n        qx.bom.Element.addListener(\n          document.documentElement,\n          events[i],\n          this.logKeyEvent,\n          this\n        )\n      }\n    },\n\n\n    logKeyEvent: function(keyEvent)\n    {\n      var type = keyEvent.getType();\n      this._log([\n        type,\n        type !== \"keyinput\" ? keyEvent.getKeyIdentifier() : \"\",\n        type == \"keyinput\" ? keyEvent.getCharCode() : \"\",\n        keyEvent.isShiftPressed(),\n        keyEvent.isCtrlPressed(),\n        keyEvent.isAltPressed()\n      ]);\n      keyEvent.preventDefault();\n    }\n  }\n});\n"
  ]
}