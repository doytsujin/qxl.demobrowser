{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/table/MUtil.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "_tableLeft",
    "members",
    "getTableMock",
    "columnModel",
    "getColumnModelMock",
    "model",
    "getModelMock",
    "selection",
    "ui",
    "table",
    "Model",
    "selectionManager",
    "Manager",
    "setSelectionModel",
    "getTableModel",
    "getTableColumnModel",
    "getRowHeight",
    "getForceLineHeight",
    "getSelectionModel",
    "getDataRowRenderer",
    "rowrenderer",
    "Default",
    "updateContent",
    "setFocusedCell",
    "col",
    "row",
    "getKeepFirstVisibleRowComplete",
    "_updateScrollBarVisibility",
    "getSelectionManager",
    "getNewTablePaneHeader",
    "obj",
    "header",
    "pane",
    "Header",
    "getNewTablePane",
    "Pane",
    "getEnabled",
    "getSelectionMock",
    "isSelectedIndex",
    "index",
    "resetSelection",
    "getColumnCount",
    "getVisibleColumnCount",
    "getVisibleColumnAtX",
    "x",
    "getColumnWidth",
    "setColumnWidth",
    "width",
    "getVisibleX",
    "getHeaderCellRenderer",
    "headerrenderer",
    "getDataCellRenderer",
    "cellrenderer",
    "addListener",
    "removeListener",
    "getPaneModelMock",
    "getColumnAtX",
    "getX",
    "getColumnLeft",
    "getTotalWidth",
    "getSortColumnIndex",
    "isSortAscending",
    "isColumnSortable",
    "getColumnName",
    "isColumnEditable",
    "sortByColumn",
    "ascending",
    "getRowCount",
    "prefetchRows",
    "getRowData",
    "data",
    "i",
    "push",
    "getValue",
    "getPaneMock",
    "getFirstVisibleRow",
    "getScrollerMock",
    "paneModel",
    "getTable",
    "getTablePaneModel",
    "getTablePane",
    "getShowCellFocusIndicator",
    "_getNewTableDiv",
    "div",
    "dom",
    "Element",
    "create",
    "bom",
    "element",
    "Style",
    "setStyles",
    "position",
    "left",
    "top",
    "height",
    "backgroundColor",
    "document",
    "body",
    "appendChild",
    "qxl",
    "demobrowser",
    "demo",
    "MUtil"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * @require(qx.ui.table.selection.Manager)\n */\n\nqx.Mixin.define(\"qxl.demobrowser.demo.table.MUtil\",\n{\n  construct : function() {\n    this._tableLeft = 10;\n  },\n\n  members :\n  {\n    getTableMock : function()\n    {\n      var columnModel = this.getColumnModelMock();\n      var model = this.getModelMock();\n      var selection = new qx.ui.table.selection.Model();\n      var selectionManager = new qx.ui.table.selection.Manager();\n      selectionManager.setSelectionModel(selection);\n\n      var table = {\n        getTableModel : function() { return model; },\n        getTableColumnModel : function() { return columnModel; },\n        getRowHeight : function() { return 20; },\n        getForceLineHeight : function() { return true; },\n        getSelectionModel : function() { return selection; },\n        getDataRowRenderer : function() { return new qx.ui.table.rowrenderer.Default(table)},\n        updateContent : function() {},\n        setFocusedCell : function(col, row) {},\n        getKeepFirstVisibleRowComplete : function() { return true; },\n        _updateScrollBarVisibility : function(){},\n        getSelectionManager : function() { return selectionManager; },\n        getNewTablePaneHeader : function(obj) {\n          return function(obj) {\n            var header = new qx.ui.table.pane.Header(obj);\n            return header;\n          }\n        },\n        getNewTablePane : function(obj) {\n          return function(obj) {\n            return new qx.ui.table.pane.Pane(obj);\n          }\n        },\n        getEnabled : function() { return true; }\n      }\n\n      return table;\n    },\n\n\n    getSelectionMock : function()\n    {\n      return {\n        isSelectedIndex : function(index) { return index == 0; },\n        resetSelection : function() {}\n      };\n    },\n\n\n    getColumnModelMock : function()\n    {\n      return {\n        getColumnCount : function() { return 4; },\n        getVisibleColumnCount : function() { return 4; },\n        getVisibleColumnAtX : function(x) {return x; },\n        getColumnWidth : function(col) { return 100; },\n        setColumnWidth : function(col, width) {},\n        getVisibleX : function(x) { return x; },\n        getHeaderCellRenderer : function(col) {\n          return new qx.ui.table.headerrenderer.Default();\n        },\n        getDataCellRenderer : function() {\n          return new qx.ui.table.cellrenderer.Default();\n        },\n\n        addListener : function() {},\n        removeListener : function() {}\n      };\n    },\n\n\n    getPaneModelMock : function()\n    {\n      var model = {\n        getColumnAtX : function(x) { return x; },\n        getColumnCount : function() { return 4; },\n        getX : function(col) { return col; },\n        getColumnLeft : function(col) { return col * 100; },\n        getTotalWidth : function() { return 4 * 100; }\n      }\n      return model;\n    },\n\n\n    getModelMock : function()\n    {\n      return {\n        getSortColumnIndex : function() { return 0; },\n        isSortAscending : function() { return true; },\n        isColumnSortable : function(col) { return true; },\n        getColumnName : function(col) { return \"Column #\" + col; },\n        isColumnEditable : function(col) { return false; },\n        sortByColumn : function(col, ascending) {},\n        getRowCount : function() { return 500; },\n        prefetchRows : function() {},\n        getRowData : function(row) {\n          var data = [];\n          for (var i=0; i<4; i++) {\n            data.push(\"Cell \" + i + \"x\" + row)\n          }\n          return data;\n        },\n        getValue : function(col, row) { return \"Cell \" + col + \"x\" + row; }\n      }\n    },\n\n\n    getPaneMock : function()\n    {\n      return {\n        getFirstVisibleRow : function() { return 0; }\n      }\n    },\n\n\n    getScrollerMock : function()\n    {\n      var table = this.getTableMock();\n      var paneModel = this.getPaneModelMock();\n      var pane = this.getPaneMock();\n\n      return {\n        getTable : function() { return table; },\n        getTablePaneModel : function() { return paneModel; },\n        getTablePane : function() { return pane; },\n        getShowCellFocusIndicator : function() { return true; }\n      }\n    },\n\n\n    _getNewTableDiv : function(width)\n    {\n      var div = qx.dom.Element.create(\"div\");\n      qx.bom.element.Style.setStyles(div, {\n        position : \"absolute\",\n        left: this._tableLeft + \"px\",\n        width: (width || 150) + \"px\",\n        top: 20 + \"px\",\n        height: \"500px\",\n        backgroundColor : \"#FFE\"\n      });\n      this._tableLeft += (width || 150) + 20;\n      document.body.appendChild(div);\n      return div;\n    }\n  }\n});\n"
  ]
}