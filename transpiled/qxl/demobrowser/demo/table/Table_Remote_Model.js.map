{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/table/Table_Remote_Model.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "demobrowser",
    "demo",
    "table",
    "TableDemo",
    "construct",
    "__timer",
    "event",
    "Timer",
    "members",
    "createTable",
    "tableModel",
    "_tableModel",
    "RemoteTableModel",
    "custom",
    "tableColumnModel",
    "obj",
    "ui",
    "columnmodel",
    "Resize",
    "addListener",
    "reloadData",
    "Table",
    "col",
    "getTableColumnModel",
    "getBehavior",
    "setWidth",
    "createControls",
    "bar",
    "toolbar",
    "ToolBar",
    "part",
    "Part",
    "add",
    "reload",
    "Button",
    "poll",
    "CheckBox",
    "getValue",
    "start",
    "stop",
    "bind",
    "converter",
    "data",
    "Table_Remote_Model"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tobias Oetiker\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/**\n * Table using the Remote table model. For this demo, a modified Remote model is\n * used that generates row data itself instead of making calls to a backend.\n * @tag noPlayground\n *\n * @asset(qx/icon/${qx.icontheme}/22/actions/view-refresh.png)\n */\nqx.Class.define(\"qxl.demobrowser.demo.table.Table_Remote_Model\",\n{\n  extend : qxl.demobrowser.demo.table.TableDemo,\n\n  construct : function()\n  {\n    this.base(arguments);\n    this.__timer = new qx.event.Timer(1000);\n  },\n\n  members :\n  {\n    __timer : null,\n\n    createTable: function()\n    {\n      var tableModel = this._tableModel = new qxl.demobrowser.demo.table.RemoteTableModel();\n      var custom = {\n        tableColumnModel : function(obj) {\n          return new qx.ui.table.columnmodel.Resize(obj);\n        }\n      };\n\n      this.__timer.addListener(\"interval\", tableModel.reloadData, tableModel);\n\n\n      var table = new qx.ui.table.Table(tableModel,custom);\n      var col = table.getTableColumnModel().getBehavior();\n      col.setWidth(0,'10%');\n      col.setWidth(1,'90%');\n\n      return table;\n    },\n\n    createControls: function()\n    {\n      var bar = new qx.ui.toolbar.ToolBar();\n      var part = new qx.ui.toolbar.Part();\n      bar.add(part);\n\n      var reload = new qx.ui.toolbar.Button('Reload', \"icon/22/actions/view-refresh.png\");\n      reload.addListener('execute',function(){\n        this._tableModel.reloadData();\n      }, this);\n      part.add(reload);\n\n      var poll = new qx.ui.toolbar.CheckBox('Poll');\n      poll.addListener(\"execute\", function() {\n        if (poll.getValue()) {\n          this.__timer.start();\n        } else {\n          this.__timer.stop();\n        }\n      }, this);\n      part.add(poll);\n\n      // disable the reload button on poll\n      poll.bind(\"value\", reload, \"enabled\", {converter : function(data) {return !data;}});\n\n      return bar;\n    }\n  }\n});\n"
  ]
}