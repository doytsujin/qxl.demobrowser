{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/qxl.demobrowser/source/class/qxl/demobrowser/demo/table/Table_Window_Editor.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "demobrowser",
    "demo",
    "table",
    "TableDemo",
    "members",
    "getCaption",
    "createTable",
    "rowData",
    "createRandomRows",
    "tableModel",
    "ui",
    "model",
    "Simple",
    "setColumns",
    "setData",
    "setColumnEditable",
    "custom",
    "tableColumnModel",
    "obj",
    "columnmodel",
    "Resize",
    "Table",
    "getSelectionModel",
    "setSelectionMode",
    "selection",
    "Model",
    "MULTIPLE_INTERVAL_SELECTION",
    "tcm",
    "getTableColumnModel",
    "resizeBehavior",
    "getBehavior",
    "set",
    "width",
    "minWidth",
    "maxWidth",
    "setWidth",
    "setMinWidth",
    "setMaxWidth",
    "setDataCellRenderer",
    "cellrenderer",
    "Boolean",
    "setShowCellFocusIndicator",
    "setCellEditorFactory",
    "ModalCellEditorFactory",
    "core",
    "Object",
    "implement",
    "ICellEditorFactory",
    "createCellEditor",
    "cellInfo",
    "cellEditor",
    "window",
    "Window",
    "setLayout",
    "layout",
    "HBox",
    "padding",
    "modal",
    "showClose",
    "showMaximize",
    "showMinimize",
    "moveTo",
    "addListener",
    "e",
    "__cellEditor",
    "focus",
    "setTextSelection",
    "getValue",
    "length",
    "form",
    "TextField",
    "value",
    "allowGrowY",
    "add",
    "save",
    "Button",
    "close",
    "command",
    "Command",
    "execute",
    "dispose",
    "getCellEditorValue",
    "parseFloat",
    "Table_Window_Editor"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This table example shows how to use a modal window for a cell editor.\n * Although this is a very simple one, cell editors using modal windows\n * can be as sophisticated as one likes, so are useful for when a cell's\n * data is composed of many discrete parts that could be edited\n * individually. In this example, the \"A number\" column is editable.\n *\n * @tag noPlayground\n * @ignore(qxl.demobrowser.demo.table.ModalCellEditorFactory)\n */\nqx.Class.define(\"qxl.demobrowser.demo.table.Table_Window_Editor\",\n{\n  extend : qxl.demobrowser.demo.table.TableDemo,\n\n  members :\n  {\n    getCaption : function() {\n      return \"Table with window cell editor\";\n    },\n\n\n    createTable : function()\n    {\n      // Create the initial data\n      var rowData = this.createRandomRows(50);\n\n      // table model\n      var tableModel = new qx.ui.table.model.Simple();\n      tableModel.setColumns([ \"ID\", \"A number\", \"A date\", \"A boolean\" ]);\n      tableModel.setData(rowData);\n      tableModel.setColumnEditable(1, true);\n\n      // Customize the table column model.  We want one that automatically\n      // resizes columns.\n      var custom =\n      {\n        tableColumnModel : function(obj) {\n          return new qx.ui.table.columnmodel.Resize(obj);\n        }\n      };\n\n      // table\n      var table = new qx.ui.table.Table(tableModel, custom);\n\n      table.getSelectionModel().setSelectionMode(qx.ui.table.selection.Model.MULTIPLE_INTERVAL_SELECTION);\n\n      //\n      // Specify the resize behavior...  First, get the table column model,\n      // which we specified to be a ResizeTableColumModel object.\n      //\n      var tcm = table.getTableColumnModel();\n\n      // Obtain the behavior object to manipulate\n      var resizeBehavior = tcm.getBehavior();\n\n      // This uses the set() method to set all attributes at once; uses flex\n      resizeBehavior.set(0, { width:\"1*\", minWidth:40, maxWidth:80  });\n\n      // We could also set them individually:\n      resizeBehavior.setWidth(1, \"50%\");\n      resizeBehavior.setMinWidth(1, 100);\n      resizeBehavior.setMaxWidth(1, 320);\n\n      // Set one fixed width column\n      resizeBehavior.set(3, { width:100 });\n\n      // Display a checkbox in column 3\n      tcm.setDataCellRenderer(3, new qx.ui.table.cellrenderer.Boolean());\n\n      // We don't want the focus indicator.\n      table.setShowCellFocusIndicator(false);\n\n      // Specify the cell editor factory.  Can't use default (or,\n      // actually, any in-cell editor) with no focus indicator available.\n      // We'll instead use a modal cell editor.  Its cell editor factory\n      // class, ModalCellEditorFactory(), is declared towards the end of\n      // this file.\n      tcm.setCellEditorFactory(1, new qxl.demobrowser.demo.table.ModalCellEditorFactory());\n\n      return table;\n    }\n  }\n});\n\n/*\n * PLEASE NOTE:\n * For demonstration purposes the following class is added to the same file as\n * the application class. For a regular qooxdoo application each class must live\n * in a file of its own. You may neglect any warnings when generating this demo.\n */\nqx.Class.define(\"qxl.demobrowser.demo.table.ModalCellEditorFactory\",\n{\n  extend : qx.core.Object,\n  implement : qx.ui.table.ICellEditorFactory,\n\n  members :\n  {\n    // overridden\n    createCellEditor : function(cellInfo)\n    {\n      // Create the cell editor window, since we need to return it\n      // immediately.\n      var cellEditor = new qx.ui.window.Window(\"Cell Editor\");\n      cellEditor.setLayout(new qx.ui.layout.HBox(4));\n      cellEditor.set(\n      {\n        padding: 3,\n        modal: true,\n        showClose: false,\n        showMaximize: false,\n        showMinimize: false\n      });\n      cellEditor.moveTo(300, 250);\n\n\n      cellEditor.addListener(\"appear\", function(e)\n      {\n        cellEditor.__cellEditor.focus();\n        cellEditor.__cellEditor.setTextSelection(0, cellEditor.__cellEditor.getValue().length);\n      });\n\n\n      // Create a text field in which to edit the data\n      cellEditor.__cellEditor = new qx.ui.form.TextField(cellInfo.value + \"\").set({\n        allowGrowY: true\n      });\n      cellEditor.add(cellEditor.__cellEditor);\n\n      // Create the \"Save\" button to close the cell editor\n      var save = new qx.ui.form.Button(\"Save\");\n      save.addListener(\"execute\", function(e) {\n        cellEditor.close();\n      });\n      cellEditor.add(save);\n\n      // Let them press Enter from the cell editor text field to finish.\n      var command = new qx.ui.command.Command(\"Enter\");\n      command.addListener(\"execute\", function(e)\n      {\n        save.execute();\n        command.dispose();\n        command = null;\n      });\n\n      return cellEditor;\n    },\n\n    // overridden\n    getCellEditorValue : function(cellEditor)\n    {\n      // Return the value in the text field\n      return parseFloat(cellEditor.__cellEditor.getValue());\n    }\n  }\n});\n"
  ]
}