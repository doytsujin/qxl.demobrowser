{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/treevirtual/TreeVirtual_Events.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "include",
    "ui",
    "treevirtual",
    "TreeVirtual",
    "MNode",
    "tree",
    "setColumnWidth",
    "setAlwaysShowOpenCloseSymbol",
    "getRoot",
    "add",
    "edge",
    "dataModel",
    "getDataModel",
    "te1",
    "addBranch",
    "te",
    "addLeaf",
    "te2",
    "i",
    "setData",
    "newItem",
    "addListener",
    "e",
    "alert",
    "node",
    "getData",
    "nodeId",
    "toString",
    "nodeSetHideOpenClose",
    "text",
    "selectedNodes",
    "length",
    "label",
    "qxl",
    "demobrowser",
    "demo",
    "TreeVirtual_Events"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * Show use of events upon tree opening and closing, including adding nodes\n * dynamically upon tree open and removing the open/close button upon tree\n * open if the branch contains no children.\n *\n * Allows controlling selection mode.  Labels of selected items are displayed.\n */\nqx.Class.define(\"qxl.demobrowser.demo.treevirtual.TreeVirtual_Events\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    main : function()\n    {\n      this.base(arguments);\n      // We want to use some of the high-level node operation convenience\n      // methods rather than manually digging into the TreeVirtual helper\n      // classes.  Include the mixin that provides them.\n      qx.Class.include(qx.ui.treevirtual.TreeVirtual,\n                       qx.ui.treevirtual.MNode);\n\n\n      // tree\n      var tree = new qx.ui.treevirtual.TreeVirtual(\"Tree\");\n      tree.setColumnWidth(0, 400);\n      tree.setAlwaysShowOpenCloseSymbol(true);\n\n      // Add the tree\n      this.getRoot().add(tree, { edge : 30 });\n\n      // tree data model\n      var dataModel = tree.getDataModel();\n\n      var te1 = dataModel.addBranch(null, \"Desktop\", true);\n\n      var te;\n      dataModel.addBranch(te1, \"Files\", true);\n\n      te = dataModel.addBranch(te1, \"Workspace\", true);\n      dataModel.addLeaf(te, \"Windows (C:)\");\n      dataModel.addLeaf(te, \"Documents (D:)\");\n\n      dataModel.addBranch(te1, \"Network\", true);\n      dataModel.addBranch(te1, \"Trash\", true);\n\n      var te2 = dataModel.addBranch(null, \"Inbox\", true);\n\n      te = dataModel.addBranch(te2, \"Spam\", false);\n      for (var i = 1; i < 3000; i++)\n      {\n        dataModel.addLeaf(te, \"Spam Message #\" + i);\n      }\n\n      dataModel.addBranch(te2, \"Sent\", false);\n      dataModel.addBranch(te2, \"Trash\", false);\n      dataModel.addBranch(te2, \"Data\", false);\n      dataModel.addBranch(te2, \"Edit\", false);\n\n      dataModel.setData();\n\n      var newItem = 1;\n\n      /**\n       * Each time we get a treeOpenWithContent event, add yet another leaf\n       * node to the node being opened.\n       */\n      tree.addListener(\"treeOpenWithContent\",\n                       /**\n                        * @lint ignoreDeprecated(alert)\n                        */\n                       function(e)\n                       {\n                         alert('treeOpenWithContent ');\n                         var node = e.getData();\n                         dataModel.addLeaf(node.nodeId, newItem.toString());\n                         newItem++;\n                       });\n\n      tree.addListener(\"treeClose\",\n                       /**\n                        * @lint ignoreDeprecated(alert)\n                        */\n                       function(e)\n                       {\n                         alert('treeClose ');\n                       });\n\n      /*\n       * We handle opening an empty folder specially.  We demonstrate how to\n       * disable the open/close symbol once we've determined there's nothing\n       * in it.  This feature might be used to dynamically retrieve the\n       * contents of the folder, and if nothing is available, indicate it by\n       * removing the open/close symbol.\n       */\n      tree.addListener(\"treeOpenWhileEmpty\",\n                       /**\n                        * @lint ignoreDeprecated(alert)\n                        */\n                       function(e)\n                       {\n                         alert('treeOpenWhileEmpty');\n                         var node = e.getData();\n                         tree.nodeSetHideOpenClose(node, true);\n                       });\n\n\n      tree.addListener(\"changeSelection\",\n                       /**\n                        * @lint ignoreDeprecated(alert)\n                        */\n                       function(e)\n                       {\n                         var text = \"Selected labels:\";\n                         var selectedNodes = e.getData();\n                         for (i = 0; i < selectedNodes.length; i++)\n                           {\n                             text += \"\\n  \" + selectedNodes[i].label;\n                           }\n                         alert('changeSelection: ' + text);\n                       });\n    }\n  }\n});\n"
  ]
}