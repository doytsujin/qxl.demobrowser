{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/treevirtual/TreeVirtual_Filter.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "include",
    "ui",
    "treevirtual",
    "TreeVirtual",
    "MNode",
    "hBox",
    "container",
    "Composite",
    "layout",
    "HBox",
    "getRoot",
    "add",
    "edge",
    "tree",
    "set",
    "width",
    "setAlwaysShowOpenCloseSymbol",
    "resizeBehavior",
    "getTableColumnModel",
    "getBehavior",
    "minWidth",
    "dataModel",
    "getDataModel",
    "te1",
    "addBranch",
    "te1_1",
    "te",
    "addLeaf",
    "setColumnData",
    "te2",
    "i",
    "commandFrame",
    "groupbox",
    "GroupBox",
    "setLayout",
    "VBox",
    "filterLabel",
    "basic",
    "Label",
    "textField",
    "form",
    "TextField",
    "setValue",
    "addListener",
    "setData",
    "filter",
    "lang",
    "Function",
    "bind",
    "node",
    "type",
    "MTreePrimitive",
    "Type",
    "LEAF",
    "label",
    "indexOf",
    "getValue",
    "setFilter",
    "qxl",
    "demobrowser",
    "demo",
    "TreeVirtual_Filter"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*\n * Demonstrate how to apply a filter to the SimpleTreeDataModel.\n */\nqx.Class.define(\"qxl.demobrowser.demo.treevirtual.TreeVirtual_Filter\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    main : function()\n    {\n      this.base(arguments);\n      // We want to use some of the high-level node operation convenience\n      // methods rather than manually digging into the TreeVirtual helper\n      // classes.  Include the mixin that provides them.\n      qx.Class.include(qx.ui.treevirtual.TreeVirtual,\n                       qx.ui.treevirtual.MNode);\n\n      // Use an HBox to hold the tree and the groupbox\n      var hBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(20));\n      this.getRoot().add(hBox, { edge : 30 });\n\n      // tree\n      var tree = new qx.ui.treevirtual.TreeVirtual(\n          [\n            \"Tree\",\n            \"Permissions\",\n            \"Last Accessed\"\n          ]);\n      tree.set(\n        {\n          width  : 400\n        });\n      tree.setAlwaysShowOpenCloseSymbol(true);\n\n      // Obtain the resize behavior object to manipulate\n      var resizeBehavior = tree.getTableColumnModel().getBehavior();\n\n      // Ensure that the tree column remains sufficiently wide\n      resizeBehavior.set(0, { width:\"1*\", minWidth:180  });\n\n      hBox.add(tree);\n\n      // tree data model\n      var dataModel = tree.getDataModel();\n\n      var te1 = dataModel.addBranch(null, \"Desktop\", true);\n      var te1_1;\n\n      dataModel.addBranch(te1, \"Files\", true);\n\n      te1_1 = dataModel.addBranch(te1, \"Workspace\", true);\n      var te = dataModel.addLeaf(te1_1, \"Windows (C:)\");\n      dataModel.setColumnData(te, 1, \"-rwxr-xr-x\");\n      dataModel.setColumnData(te, 2, \"2007-01-30 22:54:03\");\n      te = dataModel.addLeaf(te1_1, \"Documents (D:)\");\n      dataModel.setColumnData(te, 1, \"-rwxr-xr-x\");\n      dataModel.setColumnData(te, 2, \"2007-01-30 22:54:03\");\n\n      dataModel.addBranch(te1, \"Network\", true);\n\n      te = dataModel.addBranch(te1, \"Trash\", true);\n\n      var te2 = dataModel.addBranch(null, \"Inbox\", true);\n\n      te = dataModel.addBranch(te2, \"Spam\", true);\n\n      for (var i = 1; i < 3000; i++)\n      {\n        dataModel.addLeaf(te, \"Spam Message #\" + i);\n      }\n\n      dataModel.addBranch(te2, \"Sent\", false);\n      dataModel.addBranch(te2, \"Trash\", false);\n      dataModel.addBranch(te2, \"Data\", false);\n      dataModel.addBranch(te2, \"Edit\", false);\n\n      var commandFrame = new qx.ui.groupbox.GroupBox(\"Control\");\n      commandFrame.setLayout(new qx.ui.layout.VBox(2));\n\n      hBox.add(commandFrame);\n\n      // Create a combo box for the selection type\n      var filterLabel = new qx.ui.basic.Label(\"Filter:\");\n      commandFrame.add(filterLabel);\n\n      var textField = new qx.ui.form.TextField();\n      textField.setValue(\"100\");\n      textField.addListener(\"input\", function() {\n        dataModel.setData();\n      },this);\n      commandFrame.add(textField);\n\n      // Set the filter\n      var filter = qx.lang.Function.bind(function(node)\n      {\n        if (node.type == qx.ui.treevirtual.MTreePrimitive.Type.LEAF) {\n          var label = node.label;\n          return label.indexOf(textField.getValue()) != -1;\n        }\n        return true;\n      }, this);\n      dataModel.setFilter(filter);\n    }\n  }\n});\n"
  ]
}