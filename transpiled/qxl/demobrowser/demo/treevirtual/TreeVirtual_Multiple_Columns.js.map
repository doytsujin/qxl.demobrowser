{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/treevirtual/TreeVirtual_Multiple_Columns.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "include",
    "ui",
    "treevirtual",
    "TreeVirtual",
    "MNode",
    "hBox",
    "container",
    "Composite",
    "layout",
    "HBox",
    "getRoot",
    "add",
    "edge",
    "tree",
    "set",
    "width",
    "setAlwaysShowOpenCloseSymbol",
    "resizeBehavior",
    "getTableColumnModel",
    "getBehavior",
    "minWidth",
    "dataModel",
    "getDataModel",
    "te1",
    "addBranch",
    "nodeSetLabelStyle",
    "te1_1",
    "te",
    "addLeaf",
    "setColumnData",
    "nodeSetCellStyle",
    "te2",
    "i",
    "setData",
    "commandFrame",
    "groupbox",
    "GroupBox",
    "setLayout",
    "VBox",
    "o",
    "basic",
    "Atom",
    "form",
    "TextField",
    "readOnly",
    "addListener",
    "e",
    "nodes",
    "getData",
    "setValue",
    "getHierarchy",
    "nodeId",
    "join",
    "buttonRemove",
    "setEnabled",
    "Button",
    "enabled",
    "selectedNodes",
    "getSelectedNodes",
    "length",
    "prune",
    "CheckBox",
    "value",
    "setUseTreeLines",
    "setExcludeFirstLevelTreeLines",
    "getValue",
    "node",
    "nodeSetHideOpenClose",
    "setOpenCloseClickSelectsRow",
    "setColumnVisibilityButtonVisible",
    "qxl",
    "demobrowser",
    "demo",
    "TreeVirtual_Multiple_Columns"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*\n * Demonstrate use of multiple columns in a tree, and the use of the\n * getHierarchy() method to retrieve the entire tree path of a node.\n * Allows various options to be manipulated.\n */\nqx.Class.define(\"qxl.demobrowser.demo.treevirtual.TreeVirtual_Multiple_Columns\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    main : function()\n    {\n      this.base(arguments);\n      // We want to use some of the high-level node operation convenience\n      // methods rather than manually digging into the TreeVirtual helper\n      // classes.  Include the mixin that provides them.\n      qx.Class.include(qx.ui.treevirtual.TreeVirtual,\n                       qx.ui.treevirtual.MNode);\n\n      // Use an HBox to hold the tree and the groupbox\n      var hBox = new qx.ui.container.Composite(new qx.ui.layout.HBox(20));\n      this.getRoot().add(hBox, { edge : 30 });\n\n      // tree\n      var tree = new qx.ui.treevirtual.TreeVirtual(\n          [\n            \"Tree\",\n            \"Permissions\",\n            \"Last Accessed\"\n          ]);\n      tree.set(\n        {\n          width  : 400\n        });\n      tree.setAlwaysShowOpenCloseSymbol(true);\n\n      // Obtain the resize behavior object to manipulate\n      var resizeBehavior = tree.getTableColumnModel().getBehavior();\n\n      // Ensure that the tree column remains sufficiently wide\n      resizeBehavior.set(0, { width:\"1*\", minWidth:180  });\n\n      hBox.add(tree);\n\n      // tree data model\n      var dataModel = tree.getDataModel();\n\n      var te1 = dataModel.addBranch(null, \"Desktop\", true);\n      tree.nodeSetLabelStyle(te1,\n                             \"background-color: red; \" +\n                             \"color: white;\" +\n                             \"font-weight: bold;\");\n\n      var te1_1;\n\n      dataModel.addBranch(te1, \"Files\", true);\n\n      te1_1 = dataModel.addBranch(te1, \"Workspace\", true);\n      var te = dataModel.addLeaf(te1_1, \"Windows (C:)\");\n      dataModel.setColumnData(te, 1, \"-rwxr-xr-x\");\n      dataModel.setColumnData(te, 2, \"2007-01-30 22:54:03\");\n      te = dataModel.addLeaf(te1_1, \"Documents (D:)\");\n      dataModel.setColumnData(te, 1, \"-rwxr-xr-x\");\n      dataModel.setColumnData(te, 2, \"2007-01-30 22:54:03\");\n\n      dataModel.addBranch(te1, \"Network\", true);\n\n      te = dataModel.addBranch(te1, \"Trash\", true);\n      tree.nodeSetCellStyle(te, \"background-color: cyan;\");\n\n      var te2 = dataModel.addBranch(null, \"Inbox\", true);\n\n      te = dataModel.addBranch(te2, \"Spam\", false);\n\n      for (var i = 1; i < 3000; i++)\n      {\n        dataModel.addLeaf(te, \"Spam Message #\" + i);\n      }\n\n      dataModel.addBranch(te2, \"Sent\", false);\n      dataModel.addBranch(te2, \"Trash\", false);\n      dataModel.addBranch(te2, \"Data\", false);\n      dataModel.addBranch(te2, \"Edit\", false);\n\n      dataModel.setData();\n\n      var commandFrame = new qx.ui.groupbox.GroupBox(\"Control\");\n      commandFrame.setLayout(new qx.ui.layout.VBox(8));\n\n      hBox.add(commandFrame);\n\n      var o = new qx.ui.basic.Atom(\"Current Selection: \");\n      commandFrame.add(o);\n\n      o = new qx.ui.form.TextField();\n      o.set({ readOnly: true });\n      commandFrame.add(o);\n\n      tree.addListener(\n        \"changeSelection\",\n        function(e)\n        {\n          // Get the list of selected nodes.  We're in single-selection mode,\n          // so there will be only one of them.\n          var nodes = e.getData();\n          this.setValue(tree.getHierarchy(nodes[0].nodeId).join('/'));\n          buttonRemove.setEnabled(true);\n        },\n        o);\n\n      var buttonRemove = new qx.ui.form.Button(\"Remove\");\n      buttonRemove.set({ enabled: false });\n      commandFrame.add(buttonRemove);\n      buttonRemove.addListener(\n        \"execute\",\n        function(e)\n        {\n          var selectedNodes = tree.getSelectedNodes();\n          for (var i = 0; i < selectedNodes.length; i++)\n          {\n            dataModel.prune(selectedNodes[i].nodeId, true);\n            dataModel.setData();\n          }\n        });\n\n      o = new qx.ui.form.CheckBox(\"Use tree lines if theme supports them?\");\n      o.set({ value: true });\n      commandFrame.add(o);\n      o.addListener(\"changeValue\",\n                    function(e)\n                    {\n                      tree.setUseTreeLines(e.getData());\n                    });\n\n      o = new qx.ui.form.CheckBox(\"Exclude first-level tree lines?\");\n      o.set({ value: false });\n      commandFrame.add(o);\n      o.addListener(\"changeValue\",\n                    function(e)\n                    {\n                      tree.setExcludeFirstLevelTreeLines(e.getData());\n                    });\n\n      o = new qx.ui.form.CheckBox(\"Always show open/close symbol?\");\n      o.set({ value: true });\n      commandFrame.add(o);\n      o.addListener(\"changeValue\",\n                    function(e)\n                    {\n                      tree.setAlwaysShowOpenCloseSymbol(e.getData());\n                    });\n\n      o = new qx.ui.form.CheckBox(\"Remove open/close if found empty?\");\n      o.set({ value: true });\n      commandFrame.add(o);\n      tree.addListener(\"treeOpenWhileEmpty\",\n                       function(e)\n                       {\n                         if (this.getValue())\n                         {\n                           var node = e.getData();\n                           tree.nodeSetHideOpenClose(node, true);\n                         }\n                       },\n                       o);\n\n      o = new qx.ui.form.CheckBox(\"Open/close click selects row?\");\n      o.set({ value: false });\n      commandFrame.add(o);\n      o.addListener(\"changeValue\",\n                    function(e)\n                    {\n                      tree.setOpenCloseClickSelectsRow(e.getData());\n                    });\n\n      o = new qx.ui.form.CheckBox(\"Disable the tree?\");\n      o.set({ value: false });\n      commandFrame.add(o);\n      o.addListener(\"changeValue\",\n                    function(e)\n                    {\n                      tree.setEnabled(! e.getData());\n                    });\n\n      o = new qx.ui.form.CheckBox(\"Show column visibilty menu\");\n      o.set({ value: true });\n      commandFrame.add(o);\n      o.addListener(\"changeValue\",\n                    function(e)\n                    {\n                      tree.setColumnVisibilityButtonVisible(e.getData());\n                    });\n    }\n  }\n});\n"
  ]
}