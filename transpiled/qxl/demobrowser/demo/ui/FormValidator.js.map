{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/qxl.demobrowser/source/class/qxl/demobrowser/demo/ui/FormValidator.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "username",
    "ui",
    "form",
    "TextField",
    "setPlaceholder",
    "setWidth",
    "setRequired",
    "getRoot",
    "add",
    "left",
    "top",
    "email",
    "password1",
    "password2",
    "accepted",
    "CheckBox",
    "manager",
    "validation",
    "Manager",
    "passwordLengthValidator",
    "value",
    "item",
    "valid",
    "length",
    "setInvalidMessage",
    "userNameValidator",
    "AsyncValidator",
    "validator",
    "window",
    "setTimeout",
    "setValid",
    "util",
    "Validate",
    "setValidator",
    "items",
    "getValue",
    "message",
    "send",
    "Button",
    "addListener",
    "setEnabled",
    "setLabel",
    "validate",
    "getValid",
    "alert",
    "getInvalidMessages",
    "join",
    "notEmptyDescription",
    "basic",
    "Label",
    "setRich",
    "setValue",
    "qxl",
    "demobrowser",
    "demo",
    "FormValidator"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwitemann)\n\n************************************************************************ */\n\n/**\n * @lint ignoreDeprecated(alert)\n * @tag showcase\n */\nqx.Class.define(\"qxl.demobrowser.demo.ui.FormValidator\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    main : function()\n    {\n      this.base(arguments);\n\n      // create a field for a usernamen\n      var username = new qx.ui.form.TextField();\n      username.setPlaceholder(\"username\");\n      username.setWidth(150);\n      username.setRequired(true);\n      this.getRoot().add(username, {left: 20, top: 70});\n\n      // create a textfield for the email address\n      var email = new qx.ui.form.TextField();\n      email.setPlaceholder(\"email address\");\n      email.setWidth(150);\n      this.getRoot().add(email, {left: 20, top: 100});\n\n      // cerate two textfields for a password\n      var password1 = new qx.ui.form.TextField();\n      password1.setPlaceholder(\"password\");\n      password1.setWidth(150);\n      this.getRoot().add(password1, {left: 20, top: 130});\n\n      var password2 = new qx.ui.form.TextField();\n      password2.setPlaceholder(\"password\");\n      password2.setWidth(150);\n      this.getRoot().add(password2, {left: 20, top: 160});\n\n      // create a checkbox\n      var accepted = new qx.ui.form.CheckBox(\"Accept\");\n      accepted.setRequired(true);\n      this.getRoot().add(accepted, {left: 20, top: 190});\n\n\n      // create the form manager\n      var manager = new qx.ui.form.validation.Manager();\n      // create a validator function\n      var passwordLengthValidator = function(value, item) {\n        var valid = value != null && value.length > 2;\n        if (!valid) {\n          item.setInvalidMessage(\"Please enter a password at with least 3 characters.\");\n        }\n        return valid;\n      };\n\n      // create a async validator function\n      var userNameValidator = new qx.ui.form.validation.AsyncValidator(\n        function(validator, value) {\n          // use a timeout instad of a server request (async)\n          window.setTimeout(function() {\n            if (value == null || value.length == 0) {\n              validator.setValid(false, \"Server said no!\");\n            } else {\n              validator.setValid(true);\n            }\n          }, 1000);\n        }\n      );\n\n      // add the username with a async validator\n      manager.add(username, userNameValidator);\n      // add the email with a predefined email validator\n      manager.add(email, qx.util.Validate.email());\n      // add the password fields with the notEmpty validator\n      manager.add(password1, passwordLengthValidator);\n      manager.add(password2, passwordLengthValidator);\n      // add the checkbox (required flag is set)\n      manager.add(accepted);\n\n      // add a validator to the manager itself (passwords mut be equal)\n      manager.setValidator(function(items) {\n        var valid = password1.getValue() == password2.getValue();\n        if (!valid) {\n          var message = \"Passwords must be equal.\";\n          password1.setInvalidMessage(message);\n          password2.setInvalidMessage(message);\n          password1.setValid(false);\n          password2.setValid(false);\n        }\n        return valid;\n      });\n\n      var send = new qx.ui.form.Button(\"Send\");\n      this.getRoot().add(send, {left: 20, top: 215});\n      send.addListener(\"execute\", function() {\n        // configure the send button\n        send.setEnabled(false);\n        send.setLabel(\"Validating...\");\n        // return type can not be used because of async validation\n        manager.validate()\n      }, this);\n\n\n      // add a listener to the form manager for the validation complete\n      manager.addListener(\"complete\", function() {\n        // configure the send button\n        send.setEnabled(true);\n        send.setLabel(\"Send\");\n        // check the validation status\n        if (manager.getValid()) {\n          alert(\"You can send...\");\n        } else {\n          alert(manager.getInvalidMessages().join(\"\\n\"));\n        }\n      }, this);\n\n\n\n\n\n\n\n      /* ***********************************************\n       * DESCRIPTIONS\n       * ********************************************* */\n      // List Selection sync description\n      var notEmptyDescription = new qx.ui.basic.Label();\n      notEmptyDescription.setRich(true);\n      notEmptyDescription.setWidth(400);\n      notEmptyDescription.setValue(\n        \"<b>Client side form validation</b><br/>\"\n        + \"All fields are required. Some by a custom validator, some by a \"\n        + \"predefined validator and some by the required flag.\"\n      );\n      this.getRoot().add(notEmptyDescription, {left: 20, top: 10});\n    }\n  }\n});\n"
  ]
}