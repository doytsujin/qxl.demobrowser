{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/util/FSMMaze.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "statics",
    "Direction",
    "WEST",
    "SOUTH",
    "EAST",
    "NORTH",
    "construct",
    "rows",
    "columns",
    "x",
    "y",
    "cellSize",
    "setLayout",
    "layout",
    "Grid",
    "numRows",
    "undefined",
    "numCols",
    "totalHeight",
    "totalWidth",
    "setWidth",
    "setHeight",
    "row",
    "getLayout",
    "setRowHeight",
    "col",
    "setColumnWidth",
    "cells",
    "mazeInfo",
    "HBox",
    "add",
    "column",
    "setDecorator",
    "decoration",
    "Decorator",
    "set",
    "width",
    "style",
    "color",
    "cellStack",
    "visitedCells",
    "totalCells",
    "currentCell",
    "neighbors",
    "neighbor",
    "Math",
    "floor",
    "random",
    "push",
    "currentCellWall",
    "qxl",
    "demobrowser",
    "demo",
    "util",
    "FSMMaze",
    "neighborWall",
    "length",
    "r",
    "currentWall",
    "previousWall",
    "getDecorator",
    "widthLeft",
    "getWidthLeft",
    "widthBottom",
    "getWidthBottom",
    "widthRight",
    "getWidthRight",
    "widthTop",
    "getWidthTop",
    "setWidthLeft",
    "setWidthBottom",
    "setWidthRight",
    "setWidthTop",
    "previousNeighborWall",
    "cell",
    "pop",
    "startCell",
    "setBackgroundColor",
    "endCell",
    "abs",
    "members",
    "getCellSize",
    "getStartCell",
    "getEndCell",
    "getCellTopLeft",
    "top",
    "left",
    "getWestCell",
    "dir",
    "getSouthCell",
    "getEastCell",
    "getNorthCell",
    "markCell",
    "size",
    "ceil",
    "o",
    "basic",
    "Label",
    "height",
    "paddingTop",
    "paddingLeft",
    "rich"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Derrell Lipman\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.demobrowser.demo.util.FSMMaze\",\n{\n  extend : qx.ui.container.Composite,\n\n  statics :\n  {\n    Direction :\n    {\n      WEST  : 0x8,\n      SOUTH : 0x4,\n      EAST  : 0x2,\n      NORTH : 0x1\n    }\n  },\n\n  construct : function(rows, columns, x, y, cellSize)\n  {\n    this.base(arguments);\n    this.setLayout(new qx.ui.layout.Grid());\n\n    this.numRows  = (rows === undefined     ? 10 : rows);\n    this.numCols  = (columns === undefined  ? 10 : columns);\n    this.x        = (x === undefined        ? 50 : x);\n    this.y        = (y === undefined        ? 50 : y);\n    this.cellSize = (cellSize === undefined ? 50 : cellSize);\n\n    this.totalHeight = this.numRows * this.cellSize;\n    this.totalWidth = this.numCols * this.cellSize;\n\n    this.setWidth(this.totalWidth);\n    this.setHeight(this.totalHeight);\n\n    for (var row = 0; row < this.numRows; row++)\n    {\n      this.getLayout().setRowHeight(row, this.cellSize);\n    }\n\n    for (var col = 0; col < this.numCols; col++)\n    {\n      this.getLayout().setColumnWidth(col, this.cellSize);\n    }\n\n    // Initialize the cells and walls arrays.  Walls are Border objects;\n    // Cells are HorizontalBoxLayout objects.\n    this.cells = [];\n\n    // Each element of mazeInfo is a bitmap of walls\n    // (qxl.demobrowser.demo.util.FSMMaze.Direction.*)\n    this.mazeInfo = [];\n\n    // Build a grid with all walls of all cells intact\n    for (row = 0; row < this.numRows; row++)\n    {\n      this.cells[row] = [];\n      this.mazeInfo[row] = [];\n\n      for (col = 0; col < this.numCols; col++)\n      {\n\n        // Instantiate this cell\n        this.cells[row][col] = new qx.ui.container.Composite();\n        this.cells[row][col].setLayout(new qx.ui.layout.HBox());\n        this.add(this.cells[row][col], {row: row, column: col});\n\n        // Apply the border on the cell\n        this.cells[row][col].setDecorator(new qx.ui.decoration.Decorator().set({\n          width: 1,\n          style: \"solid\",\n          color: \"black\"\n        }));\n\n        // We're starting with all walls intact.  Note that.\n        // See // qxl.demobrowser.demo.util.FSMMaze.Direction.* for the bit field values.\n        this.mazeInfo[row][col] = 0xf;\n      }\n    }\n\n    //\n    // Build a \"perfect\" maze using the depth-first search algorithm described\n    // at http://www.mazeworks.com/mazegen/mazetut/index.htm\n    //\n\n    var cellStack = [];\n    var visitedCells = 1;\n    var totalCells = this.numRows * this.numCols;\n    var currentCell;\n    var neighbors;\n    var neighbor;\n\n    // Start with some random cell\n    currentCell =\n      {\n        row : Math.floor(Math.random() * this.numRows),\n        col : Math.floor(Math.random() * this.numCols)\n      };\n\n    while (visitedCells < totalCells)\n    {\n      // Initialize neighbors of current cell array\n      neighbors = [];\n\n      // See if there's a west neighbor with all walls intact\n      if (currentCell.col > 0 &&\n          (this.mazeInfo[currentCell.row][currentCell.col - 1] == 0xf))\n      {\n        neighbors.push(\n          {\n            row             : currentCell.row,\n            col             : currentCell.col - 1,\n            currentCellWall : qxl.demobrowser.demo.util.FSMMaze.Direction.WEST,\n            neighborWall    : qxl.demobrowser.demo.util.FSMMaze.Direction.EAST\n          });\n      }\n\n      // See if there's a south neighbor with all walls intact\n      if (currentCell.row < this.numRows - 1 &&\n          (this.mazeInfo[currentCell.row + 1][currentCell.col] == 0xf))\n      {\n        neighbors.push(\n          {\n            row             : currentCell.row + 1,\n            col             : currentCell.col,\n            currentCellWall : qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH,\n            neighborWall    : qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH\n          });\n      }\n\n      // See if there's an east neighbor with all walls intact\n      if (currentCell.col < this.numCols - 1 &&\n          (this.mazeInfo[currentCell.row][currentCell.col + 1] == 0xf))\n      {\n        neighbors.push(\n          {\n            row             : currentCell.row,\n            col             : currentCell.col + 1,\n            currentCellWall : qxl.demobrowser.demo.util.FSMMaze.Direction.EAST,\n            neighborWall    : qxl.demobrowser.demo.util.FSMMaze.Direction.WEST\n          });\n      }\n\n      // See if there's a north neighbor with all walls intact\n      if (currentCell.row > 0 &&\n          (this.mazeInfo[currentCell.row - 1][currentCell.col] == 0xf))\n      {\n        neighbors.push(\n          {\n            row             : currentCell.row - 1,\n            col             : currentCell.col,\n            currentCellWall : qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH,\n            neighborWall    : qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH\n          });\n      }\n\n      // Did we find any neighbors with all walls intact?\n      if (neighbors.length > 0)\n      {\n        // Yup.  Choose one at random\n        var r = Math.floor(Math.random() * neighbors.length);\n        neighbor = neighbors[r];\n\n        // Knock down the wall between it and currentCell.  This is a\n        // multiple-step process:\n\n        // Step 1: Remove the wall flag on the current cell\n        this.mazeInfo[currentCell.row][currentCell.col] &=\n          ~neighbor.currentCellWall;\n\n        // Step 2; Remove the wall flag on the neighbor cell\n        this.mazeInfo[neighbor.row][neighbor.col] &=\n          ~neighbor.neighborWall;\n\n        // Step 3: Actually remove the wall on the current cell\n        var currentWall = new qx.ui.decoration.Decorator().set({\n          width: 1,\n          style: \"solid\",\n          color: \"black\"\n        });\n        var previousWall = this.cells[currentCell.row][currentCell.col].getDecorator();\n        currentWall.set({\n          widthLeft: previousWall.getWidthLeft(),\n          widthBottom: previousWall.getWidthBottom(),\n          widthRight: previousWall.getWidthRight(),\n          widthTop: previousWall.getWidthTop()\n        });\n        switch(neighbor.currentCellWall)\n        {\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.WEST:\n          currentWall.setWidthLeft(0);\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH:\n          currentWall.setWidthBottom(0);\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.EAST:\n          currentWall.setWidthRight(0);\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH:\n          currentWall.setWidthTop(0);\n          break;\n        }\n        this.cells[currentCell.row][currentCell.col].setDecorator(currentWall);\n\n        // Step 4: Actually remove the wall on the neighbor cell\n        var neighborWall = new qx.ui.decoration.Decorator().set({\n          width: 1,\n          style: \"solid\",\n          color: \"black\"\n        });\n        var previousNeighborWall = this.cells[neighbor.row][neighbor.col].getDecorator();\n        neighborWall.set({\n          widthLeft: previousNeighborWall.getWidthLeft(),\n          widthBottom: previousNeighborWall.getWidthBottom(),\n          widthRight: previousNeighborWall.getWidthRight(),\n          widthTop: previousNeighborWall.getWidthTop()\n        });\n        switch(neighbor.neighborWall)\n        {\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.WEST:\n          neighborWall.setWidthLeft(0);\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH:\n          neighborWall.setWidthBottom(0);\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.EAST:\n          neighborWall.setWidthRight(0);\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH:\n          neighborWall.setWidthTop(0);\n          break;\n        }\n        this.cells[neighbor.row][neighbor.col].setDecorator(neighborWall);\n\n        // Push currentCell onto the cell stack\n        cellStack.push({ row : currentCell.row, col : currentCell.col });\n\n        // The neighbor becomes our new current cell\n        currentCell = { row : neighbor.row, col : neighbor.col };\n\n        // We've visited one more cell\n        visitedCells++;\n      }\n      else\n      {\n        // Pop the most recent cell from the cell stack\n        var cell = cellStack.pop();\n        currentCell = { row : cell.row, col : cell.col };\n      }\n    }\n\n    // Determine the starting cell\n    this.startCell =\n      {\n        row : Math.floor(Math.random() * this.numRows),\n        col : Math.floor(Math.random() * this.numCols)\n      }\n\n    // Show the starting cell\n    var startCell = this.cells[this.startCell.row][this.startCell.col];\n    startCell.setBackgroundColor(\"#b0ffb0\");\n\n    // Determine the ending cell, not too close to the starting cell\n    do\n    {\n      this.endCell =\n        {\n          row : Math.floor(Math.random() * this.numRows),\n          col : Math.floor(Math.random() * this.numCols)\n        }\n    } while ((Math.abs(this.startCell.row - this.endCell.row) <\n              this.numRows / 2) ||\n             (Math.abs(this.startCell.col - this.endCell.col) <\n              this.numCols / 2));\n\n    // Show the ending cell\n    var endCell = this.cells[this.endCell.row][this.endCell.col];\n    endCell.setBackgroundColor(\"#ffb0b0\");\n  },\n\n  members :\n  {\n    /**\n     * Get the size of each cell.\n     */\n    getCellSize : function()\n    {\n      return this.cellSize;\n    },\n\n    /**\n     * Get the starting cell.\n     *\n     * @return {Object}\n     *   The returned object contains two members: row and col.\n     */\n    getStartCell : function()\n    {\n      return this.startCell;\n    },\n\n    /**\n     * Get the ending cell.\n     *\n     * @return {Object}\n     *   The returned object contains two members: row and col.\n     */\n    getEndCell : function()\n    {\n      return this.endCell;\n    },\n\n    /**\n     * Get the position of the specified cell.\n     *\n     * @param cell {Object}\n     *   The cell for which the position is desired.  This object contains two\n     *   members: row and col.\n     *\n     * @return {Object}\n     *   The returned object contains two members: top and left.\n     */\n    getCellTopLeft : function(cell)\n    {\n      return(\n        {\n          top  : this.y + (this.cellSize * cell.row),\n          left : this.x + (this.cellSize * cell.col)\n        });\n    },\n\n    /**\n     * Get the neighbor cell to the specified cell's west.\n     *\n     * @param cell {Object}\n     *   The cell for which the neighbor is desired.  This object contains two\n     *   members: row and col.\n     *\n     * @return {Object|null}\n     *   The returned object contains two members: row and col.\n     *   If there is no such neighbor, null is returned.\n     */\n    getWestCell : function(cell)\n    {\n      var dir = qxl.demobrowser.demo.util.FSMMaze.Direction.WEST;\n      if (cell.col > 0 &&\n          ((this.mazeInfo[cell.row][cell.col] & dir) == 0))\n      {\n        return(\n          {\n            row : cell.row,\n            col : cell.col - 1\n          });\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the neighbor cell to the specified cell's south.\n     *\n     * @param cell {Object}\n     *   The cell for which the neighbor is desired.  This object contains two\n     *   members: row and col.\n     *\n     * @return {Object|null}\n     *   The returned object contains two members: row and col.\n     *   If there is no such neighbor, null is returned.\n     */\n    getSouthCell : function(cell)\n    {\n      var dir = qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH;\n      if (cell.row <  this.numRows - 1 &&\n          ((this.mazeInfo[cell.row][cell.col] & dir) == 0))\n      {\n        return(\n          {\n            row : cell.row + 1,\n            col : cell.col\n          });\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the neighbor cell to the specified cell's east.\n     *\n     * @param cell {Object}\n     *   The cell for which the neighbor is desired.  This object contains two\n     *   members: row and col.\n     *\n     * @return {Object|null}\n     *   The returned object contains two members: row and col.\n     *   If there is no such neighbor, null is returned.\n     */\n    getEastCell : function(cell)\n    {\n      var dir = qxl.demobrowser.demo.util.FSMMaze.Direction.EAST;\n      if (cell.col < this.numCols - 1 &&\n          ((this.mazeInfo[cell.row][cell.col] & dir) == 0))\n      {\n        return(\n          {\n            row : cell.row,\n            col : cell.col + 1\n          });\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the neighbor cell to the specified cell's north.\n     *\n     * @param cell {Object}\n     *   The cell for which the neighbor is desired.  This object contains two\n     *   members: row and col.\n     *\n     * @return {Object|null}\n     *   The returned object contains two members: row and col.\n     *   If there is no such neighbor, null is returned.\n     */\n    getNorthCell : function(cell)\n    {\n      var dir = qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH;\n      if (cell.row > 0 &&\n          ((this.mazeInfo[cell.row][cell.col] & dir) == 0))\n      {\n        return(\n          {\n            row : cell.row - 1,\n            col : cell.col\n          });\n      }\n\n      return null;\n    },\n\n    /**\n     * Mark the specified cell as part of the final backtrace.\n     *\n     * @param cell {Object}\n     *   The cell to be marked.  This object contains two members: row and\n     *   col.\n     *\n     * @return {Void}\n     */\n    markCell : function(cell)\n    {\n      var size = Math.ceil(this.cellSize / 5);\n      var o = new qx.ui.basic.Label(\"&bull;\", null, \"html\");\n      o.set(\n        {\n          height : size,\n          width : size,\n          paddingTop : (this.cellSize - size) / 2,\n          paddingLeft : (this.cellSize - size) / 2,\n          rich : true\n        });\n      // {top: (this.cellSize - size) / 2, left: (this.cellSize - size) / 2}\n      this.cells[cell.row][cell.col].add(o);\n    }\n  }\n});\n"
  ]
}