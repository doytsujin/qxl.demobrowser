{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/util/FSMMouse.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "util",
    "fsm",
    "FiniteStateMachine",
    "statics",
    "nextMouse",
    "ticksPerSec",
    "fadeSeconds",
    "moveSeconds",
    "construct",
    "origin",
    "maze",
    "facing",
    "view",
    "mouseName",
    "qxl",
    "demobrowser",
    "demo",
    "FSMMouse",
    "toString",
    "setDebugFlags",
    "currentCell",
    "getStartCell",
    "traversed",
    "push",
    "bLookBehind",
    "bLookSideways",
    "concat",
    "currentLocation",
    "getCellTopLeft",
    "FSMMaze",
    "Direction",
    "NORTH",
    "mouseImage",
    "ui",
    "basic",
    "Image",
    "EAST",
    "SOUTH",
    "WEST",
    "set",
    "opacity",
    "zIndex",
    "add",
    "top",
    "left",
    "state",
    "State",
    "_this",
    "entry",
    "oneshot",
    "EventHandling",
    "PREDICATE",
    "addState",
    "trans",
    "Transition",
    "event",
    "setOpacity",
    "addTransition",
    "endCell",
    "getEndCell",
    "row",
    "col",
    "i",
    "length",
    "markCell",
    "getSouthCell",
    "getNorthCell",
    "getEastCell",
    "destinationCell",
    "getWestCell",
    "destinationLocation",
    "type",
    "Event",
    "setType",
    "eventListener",
    "moveAmount",
    "Math",
    "ceil",
    "cellSize",
    "round",
    "setLayoutProperties",
    "Timer",
    "once",
    "remove",
    "dispose",
    "start",
    "members",
    "timeout",
    "timer",
    "addListener"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAoBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYC,kBADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,SAAS,EAAK,CADhB;AAEEC,MAAAA,WAAW,EAAG,EAFhB;AAGEC,MAAAA,WAAW,EAAG,GAHhB;AAIEC,MAAAA,WAAW,EAAG;AAJhB,KAJF;AAWEC,IAAAA,SAAS,EAAG,mBAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EACZ;AACE;AACA,UAAIC,SAAS,GAAGC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCb,SAAnC,CAA6Cc,QAA7C,EAAhB,CAFF,CAIE;;AACA,4DAAqBL,SAArB,EALF,CAOE;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAKM,aAAL,CAAmB,CAAnB,EAfF,CAiBE;;AACA,QAAEL,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCb,SAArC,CAlBF,CAoBE;;AACA,WAAKO,MAAL,GAAcA,MAAd,CArBF,CAuBE;;AACA,UAAIF,MAAM,KAAK,IAAf,EACA;AACE;AACA,aAAKW,WAAL,GAAmBV,IAAI,CAACW,YAAL,EAAnB,CAFF,CAIE;;AACA,aAAKC,SAAL,GAAiB,EAAjB,CALF,CAOE;;AACA,aAAKA,SAAL,CAAeC,IAAf,CAAoB,KAAKH,WAAzB,EARF,CAUE;;AACA,aAAKI,WAAL,GAAmB,IAAnB,CAXF,CAaE;;AACA,aAAKC,aAAL,GAAqB,IAArB;AACD,OAhBD,MAkBA;AACE;AACA,aAAKL,WAAL,GAAmBX,MAAM,CAACW,WAA1B,CAFF,CAIE;;AACA,aAAKE,SAAL,GAAiBb,MAAM,CAACa,SAAP,CAAiBI,MAAjB,EAAjB,CALF,CAOE;;AACA,aAAKF,WAAL,GAAmB,KAAnB,CARF,CAUE;;AACA,aAAKC,aAAL,GAAqB,KAArB;AACD,OAtDH,CAwDE;;;AACA,WAAKE,eAAL,GAAuBjB,IAAI,CAACkB,cAAL,CAAoB,KAAKR,WAAzB,CAAvB,CAzDF,CA2DE;;AACA,cAAOT,MAAP;AAEA,aAAKG,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAjD;AACE,eAAKC,UAAL,GACE,IAAIvC,EAAE,CAACwC,EAAH,CAAMC,KAAN,CAAYC,KAAhB,CAAsB,qCAAtB,CADF;AAEA;;AAEF,aAAKrB,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAjD;AACE,eAAKJ,UAAL,GACE,IAAIvC,EAAE,CAACwC,EAAH,CAAMC,KAAN,CAAYC,KAAhB,CAAsB,oCAAtB,CADF;AAEA;;AAEF,aAAKrB,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAjD;AACE,eAAKL,UAAL,GACE,IAAIvC,EAAE,CAACwC,EAAH,CAAMC,KAAN,CAAYC,KAAhB,CAAsB,qCAAtB,CADF;AAEA;;AAEF,aAAKrB,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAjD;AACE,eAAKN,UAAL,GACE,IAAIvC,EAAE,CAACwC,EAAH,CAAMC,KAAN,CAAYC,KAAhB,CAAsB,oCAAtB,CADF;AAEA;AApBF,OA5DF,CAmFE;;;AACA,WAAKH,UAAL,CAAgBO,GAAhB,CACE;AACEC,QAAAA,OAAO,EAAG,GADZ;AAEEC,QAAAA,MAAM,EAAI;AAFZ,OADF;AAKA7B,MAAAA,IAAI,CAAC8B,GAAL,CAAS,KAAKV,UAAd,EACE;AAACW,QAAAA,GAAG,EAAE,KAAKhB,eAAL,CAAqBgB,GAA3B;AAAgCC,QAAAA,IAAI,EAAE,KAAKjB,eAAL,CAAqBiB;AAA3D,OADF,EAzFF,CA4FE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIC,KAAK,GAAG,IAAIpD,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAY6C,KAAhB,CAAsB,gBAAtB,EACZ;AACE,mBAAY,iBAASC,KAAT,EAAgBC,KAAhB,EACZ;AACE;AACAD,UAAAA,KAAK,CAACE,OAAN,CAAc,OAAOnC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCZ,WAAxD;AACD,SALH;AAOE,kBACA;AACE,qBAAaZ,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYC,kBAAZ,CAA+BgD,aAA/B,CAA6CC;AAD5D;AARF,OADY,CAAZ;AAcA,WAAKC,QAAL,CAAcP,KAAd,EArHF,CAuHE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIQ,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,6CADF,EAEZ;AACE,qBAAc,mBAASP,KAAT,EAAgBQ,KAAhB,EACd;AACE,iBAAOR,KAAK,CAACP,OAAN,GAAgB,GAAvB;AACD,SAJH;AAME,qBAAc,gBANhB;AAQE,wBAAiB,sBAASO,KAAT,EAAgBQ,KAAhB,EACjB;AACE;AACAR,UAAAA,KAAK,CAACP,OAAN,IACE,KAAK1B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCX,WAAnC,GAAiDQ,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCZ,WAAzF,CADF;;AAEA0C,UAAAA,KAAK,CAACf,UAAN,CAAiBwB,UAAjB,CAA4BT,KAAK,CAACP,OAAlC;AACD;AAdH,OAFY,CAAZ;AAmBAK,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EAnJF,CAqJE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIA,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,gDADF,EAEZ;AACE,qBAAc;AADhB,OAFY,CAAZ;AAMAT,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EApKF,CAuKE;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIR,KAAK,GAAG,IAAIpD,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAY6C,KAAhB,CAAsB,mBAAtB,EACZ;AACE;AAEA;AACA;AACA;AACA,mBAAY,iBAASC,KAAT,EAAgBC,KAAhB,EACZ;AACE;AACA,cAAIU,OAAO,GAAGhD,IAAI,CAACiD,UAAL,EAAd;;AACA,cAAIZ,KAAK,CAAC3B,WAAN,CAAkBwC,GAAlB,IAAyBF,OAAO,CAACE,GAAjC,IACAb,KAAK,CAAC3B,WAAN,CAAkByC,GAAlB,IAAyBH,OAAO,CAACG,GADrC,EAEA;AACE;AACA,iBAAK,IAAIC,CAAC,GAAGf,KAAK,CAACzB,SAAN,CAAgByC,MAAhB,GAAyB,CAAtC,EAAyCD,CAAC,IAAI,CAA9C,EAAiDA,CAAC,EAAlD,EACA;AACEpD,cAAAA,IAAI,CAACsD,QAAL,CAAcjB,KAAK,CAACzB,SAAN,CAAgBwC,CAAhB,CAAd;AACD,aALH,CAOE;;;AACA;AACD,WAdH,CAgBE;AACA;;;AACA,kBAAOf,KAAK,CAACpC,MAAb;AAEA,iBAAKG,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAjD;AACE;AACA;AACA,kBAAIS,KAAK,CAACtB,aAAV,EACA;AACE;AACA,oBAAIf,IAAI,CAACuD,YAAL,CAAkBlB,KAAK,CAAC3B,WAAxB,MAAyC,IAA7C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAhG,EAAuGzB,IAAvG;AACD,iBANH,CAQE;;;AACA,oBAAIF,IAAI,CAACwD,YAAL,CAAkBnB,KAAK,CAAC3B,WAAxB,MAAyC,IAA7C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAhG,EAAuGnB,IAAvG;AACD;AACF,eAlBH,CAoBE;;;AACAmC,cAAAA,KAAK,CAACtB,aAAN,GAAsB,IAAtB,CArBF,CAuBE;;AACA,kBAAIsB,KAAK,CAACvB,WAAN,IACAd,IAAI,CAACyD,WAAL,CAAiBpB,KAAK,CAAC3B,WAAvB,MAAwC,IAD5C,EAEA;AACE;AACA,oBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAhG,EAAsGxB,IAAtG,EAFF,CAIE;;AACAmC,gBAAAA,KAAK,CAACvB,WAAN,GAAoB,KAApB;AACD,eAhCH,CAkCE;;;AACAuB,cAAAA,KAAK,CAACqB,eAAN,GAAwB1D,IAAI,CAAC2D,WAAL,CAAiBtB,KAAK,CAAC3B,WAAvB,CAAxB;;AACA,kBAAI2B,KAAK,CAACqB,eAAN,KAA0B,IAA9B,EACA;AACE;AACArB,gBAAAA,KAAK,CAACuB,mBAAN,GACE5D,IAAI,CAACkB,cAAL,CAAoBmB,KAAK,CAACqB,eAA1B,CADF,CAFF,CAKE;;AACA,oBAAIb,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,cAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD,eAVD,MAYA;AACE,oBAAIA,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,KAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD;;AACD;;AAEF,iBAAKzC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAjD;AACE;AACA;AACA,kBAAIW,KAAK,CAACtB,aAAV,EACA;AACE;AACA,oBAAIf,IAAI,CAACuD,YAAL,CAAkBlB,KAAK,CAAC3B,WAAxB,MAAyC,IAA7C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAhG,EAAuGzB,IAAvG;AACD,iBANH,CAQE;;;AACA,oBAAIF,IAAI,CAACwD,YAAL,CAAkBnB,KAAK,CAAC3B,WAAxB,MAAyC,IAA7C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAhG,EAAuGnB,IAAvG;AACD;AACF,eAlBH,CAoBE;;;AACAmC,cAAAA,KAAK,CAACtB,aAAN,GAAsB,IAAtB,CArBF,CAuBE;;AACA,kBAAIsB,KAAK,CAACvB,WAAN,IACAd,IAAI,CAAC2D,WAAL,CAAiBtB,KAAK,CAAC3B,WAAvB,MAAwC,IAD5C,EAEA;AACE;AACA,oBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAhG,EAAsG1B,IAAtG,EAFF,CAIE;;AACAmC,gBAAAA,KAAK,CAACvB,WAAN,GAAoB,KAApB;AACD,eAhCH,CAkCE;;;AACAuB,cAAAA,KAAK,CAACqB,eAAN,GAAwB1D,IAAI,CAACyD,WAAL,CAAiBpB,KAAK,CAAC3B,WAAvB,CAAxB;;AACA,kBAAI2B,KAAK,CAACqB,eAAN,KAA0B,IAA9B,EACA;AACE;AACArB,gBAAAA,KAAK,CAACuB,mBAAN,GACE5D,IAAI,CAACkB,cAAL,CAAoBmB,KAAK,CAACqB,eAA1B,CADF,CAFF,CAKE;;AACA,oBAAIb,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,cAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD,eAVD,MAYA;AACE,oBAAIA,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,KAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD;;AACD;;AAEF,iBAAKzC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAjD;AACE;AACA;AACA,kBAAIU,KAAK,CAACtB,aAAV,EACA;AACE;AACA,oBAAIf,IAAI,CAAC2D,WAAL,CAAiBtB,KAAK,CAAC3B,WAAvB,MAAwC,IAA5C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAhG,EAAsG1B,IAAtG;AACD,iBANH,CAQE;;;AACA,oBAAIF,IAAI,CAACyD,WAAL,CAAiBpB,KAAK,CAAC3B,WAAvB,MAAwC,IAA5C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAhG,EAAsGxB,IAAtG;AACD;AACF,eAlBH,CAoBE;;;AACAmC,cAAAA,KAAK,CAACtB,aAAN,GAAsB,IAAtB,CArBF,CAuBE;;AACA,kBAAIsB,KAAK,CAACvB,WAAN,IACAd,IAAI,CAACwD,YAAL,CAAkBnB,KAAK,CAAC3B,WAAxB,MAAyC,IAD7C,EAEA;AACE;AACA,oBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAhG,EAAuGnB,IAAvG,EAFF,CAIE;;AACAmC,gBAAAA,KAAK,CAACvB,WAAN,GAAoB,KAApB;AACD,eAhCH,CAkCE;;;AACAuB,cAAAA,KAAK,CAACqB,eAAN,GAAwB1D,IAAI,CAACuD,YAAL,CAAkBlB,KAAK,CAAC3B,WAAxB,CAAxB;;AACA,kBAAI2B,KAAK,CAACqB,eAAN,KAA0B,IAA9B,EACA;AACE;AACArB,gBAAAA,KAAK,CAACuB,mBAAN,GACE5D,IAAI,CAACkB,cAAL,CAAoBmB,KAAK,CAACqB,eAA1B,CADF,CAFF,CAKE;;AACA,oBAAIb,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,cAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD,eAVD,MAYA;AACE,oBAAIA,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,KAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD;;AACD;;AAEF,iBAAKzC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAjD;AACE;AACA;AACA,kBAAIgB,KAAK,CAACtB,aAAV,EACA;AACE;AACA,oBAAIf,IAAI,CAAC2D,WAAL,CAAiBtB,KAAK,CAAC3B,WAAvB,MAAwC,IAA5C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAhG,EAAsG1B,IAAtG;AACD,iBANH,CAQE;;;AACA,oBAAIF,IAAI,CAACyD,WAAL,CAAiBpB,KAAK,CAAC3B,WAAvB,MAAwC,IAA5C,EACA;AACE;AACA,sBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAhG,EAAsGxB,IAAtG;AACD;AACF,eAlBH,CAoBE;;;AACAmC,cAAAA,KAAK,CAACtB,aAAN,GAAsB,IAAtB,CArBF,CAuBE;;AACA,kBAAIsB,KAAK,CAACvB,WAAN,IACAd,IAAI,CAACuD,YAAL,CAAkBlB,KAAK,CAAC3B,WAAxB,MAAyC,IAD7C,EAEA;AACE;AACA,oBAAIN,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA9B,CAAuC8B,KAAvC,EAA8CrC,IAA9C,EAAoDI,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAhG,EAAuGzB,IAAvG,EAFF,CAIE;;AACAmC,gBAAAA,KAAK,CAACvB,WAAN,GAAoB,KAApB;AACD,eAhCH,CAkCE;;;AACAuB,cAAAA,KAAK,CAACqB,eAAN,GAAwB1D,IAAI,CAACwD,YAAL,CAAkBnB,KAAK,CAAC3B,WAAxB,CAAxB;;AACA,kBAAI2B,KAAK,CAACqB,eAAN,KAA0B,IAA9B,EACA;AACE;AACArB,gBAAAA,KAAK,CAACuB,mBAAN,GACE5D,IAAI,CAACkB,cAAL,CAAoBmB,KAAK,CAACqB,eAA1B,CADF,CAFF,CAKE;;AACA,oBAAIb,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,cAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD,eAVD,MAYA;AACE,oBAAIA,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,gBAAAA,KAAK,CAACkB,OAAN,CAAc,KAAd;;AACA1B,gBAAAA,KAAK,CAAC2B,aAAN,CAAoBnB,KAApB;AACD;;AACD;AA5NF;;AA+NAR,UAAAA,KAAK,CAACvB,WAAN,GAAoB,KAApB;AACD,SAzPH;AA2PE,kBACA;AACE,iBAAiB,6CADnB;AAEE,0BAAiB;AAFnB;AA5PF,OADY,CAAZ;AAmQA,WAAK4B,QAAL,CAAcP,KAAd,EAjbF,CAmbE;AACA;AACA;;AAEA,UAAIQ,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,6CADF,EAEZ;AACE,qBAAc;AADhB,OAFY,CAAZ;AAMAT,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EA7bF,CA+bE;AACA;AACA;;AAEA,UAAIA,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,mDADF,EAEZ;AACE,qBAAc;AADhB,OAFY,CAAZ;AAMAT,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EAzcF,CA4cE;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIR,KAAK,GAAG,IAAIpD,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAY6C,KAAhB,CAAsB,iBAAtB,EACZ;AACE,mBAAY,iBAASC,KAAT,EAAgBC,KAAhB,EACZ;AACE;AACAD,UAAAA,KAAK,CAACE,OAAN,CAAc,OAAOnC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCZ,WAAxD;AACD,SALH;AAOE,kBACA;AACE,qBAAaZ,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYC,kBAAZ,CAA+BgD,aAA/B,CAA6CC;AAD5D;AARF,OADY,CAAZ;AAcA,WAAKC,QAAL,CAAcP,KAAd,EAjeF,CAmeE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIQ,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,+CADF,EAEZ;AACE,qBAAc,mBAASP,KAAT,EAAgBQ,KAAhB,EACd;AACE,iBAAOR,KAAK,CAACP,OAAN,GAAgB,GAAvB;AACD,SAJH;AAME,qBAAc,iBANhB;AAQE,wBAAiB,sBAASO,KAAT,EAAgBQ,KAAhB,EACjB;AACE;AACAR,UAAAA,KAAK,CAACP,OAAN,IACE,KAAK1B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCX,WAAnC,GAAiDQ,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCZ,WAAzF,CADF;;AAEA,cAAI0C,KAAK,CAACP,OAAN,GAAgB,GAApB,EACA;AACEO,YAAAA,KAAK,CAACP,OAAN,GAAgB,GAAhB;AACD;;AACDO,UAAAA,KAAK,CAACf,UAAN,CAAiBwB,UAAjB,CAA4BT,KAAK,CAACP,OAAlC;AACD;AAlBH,OAFY,CAAZ;AAuBAK,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EAngBF,CAqgBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIA,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,4CADF,EAEZ;AACE,qBAAc;AADhB,OAFY,CAAZ;AAMAT,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EAphBF,CAuhBE;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIR,KAAK,GAAG,IAAIpD,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAY6C,KAAhB,CAAsB,cAAtB,EACZ;AACE,mBAAY,iBAASC,KAAT,EAAgBC,KAAhB,EACZ;AACE;AACAD,UAAAA,KAAK,CAACE,OAAN,CAAc,OAAOnC,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCZ,WAAxD;AACD,SALH;AAOE,kBACA;AACE,qBAAaZ,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYC,kBAAZ,CAA+BgD,aAA/B,CAA6CC;AAD5D;AARF,OADY,CAAZ;AAcA,WAAKC,QAAL,CAAcP,KAAd,EA5iBF,CA8iBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIQ,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,yCADF,EAEZ;AACE,qBAAc,mBAASP,KAAT,EAAgBQ,KAAhB,EACd;AACE,kBAAOR,KAAK,CAACpC,MAAb;AAEA,iBAAKG,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAjD;AACE,qBAAOS,KAAK,CAACpB,eAAN,CAAsBiB,IAAtB,GAA6BG,KAAK,CAACuB,mBAAN,CAA0B1B,IAA9D;;AAEF,iBAAK9B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAjD;AACE,qBAAOU,KAAK,CAACpB,eAAN,CAAsBgB,GAAtB,GAA4BI,KAAK,CAACuB,mBAAN,CAA0B3B,GAA7D;;AAEF,iBAAK7B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAjD;AACE,qBAAOW,KAAK,CAACpB,eAAN,CAAsBiB,IAAtB,GAA6BG,KAAK,CAACuB,mBAAN,CAA0B1B,IAA9D;;AAEF,iBAAK9B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAjD;AACE,qBAAOgB,KAAK,CAACpB,eAAN,CAAsBgB,GAAtB,GAA4BI,KAAK,CAACuB,mBAAN,CAA0B3B,GAA7D;AAZF;AAeD,SAlBH;AAoBE,qBAAc,cApBhB;AAsBE,wBAAiB,sBAASI,KAAT,EAAgBQ,KAAhB,EACjB;AACE;AACA,cAAIoB,UAAU,GACZC,IAAI,CAACC,IAAL,CAAUnE,IAAI,CAACoE,QAAL,IACChE,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCV,WAAnC,GAAiDO,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCZ,WADrF,CAAV,CADF,CAFF,CAME;;AACA,kBAAO0C,KAAK,CAACpC,MAAb;AAEA,iBAAKG,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CQ,IAAjD;AACES,cAAAA,KAAK,CAACpB,eAAN,CAAsBiB,IAAtB,GACEgC,IAAI,CAACG,KAAL,CAAWhC,KAAK,CAACpB,eAAN,CAAsBiB,IAAtB,GAA6B+B,UAAxC,CADF;;AAEA5B,cAAAA,KAAK,CAACf,UAAN,CAAiBgD,mBAAjB,CAAqC;AACnCpC,gBAAAA,IAAI,EAAEG,KAAK,CAACpB,eAAN,CAAsBiB,IADO;AAEnCD,gBAAAA,GAAG,EAAEI,KAAK,CAACpB,eAAN,CAAsBgB;AAFQ,eAArC;;AAIA;;AAEF,iBAAK7B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CO,KAAjD;AACEU,cAAAA,KAAK,CAACpB,eAAN,CAAsBgB,GAAtB,GACEiC,IAAI,CAACG,KAAL,CAAWhC,KAAK,CAACpB,eAAN,CAAsBgB,GAAtB,GAA4BgC,UAAvC,CADF;;AAEA5B,cAAAA,KAAK,CAACf,UAAN,CAAiBgD,mBAAjB,CAAqC;AACnCpC,gBAAAA,IAAI,EAAEG,KAAK,CAACpB,eAAN,CAAsBiB,IADO;AAEnCD,gBAAAA,GAAG,EAAEI,KAAK,CAACpB,eAAN,CAAsBgB;AAFQ,eAArC;;AAIA;;AAEF,iBAAK7B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CM,IAAjD;AACEW,cAAAA,KAAK,CAACpB,eAAN,CAAsBiB,IAAtB,GACEgC,IAAI,CAACG,KAAL,CAAWhC,KAAK,CAACpB,eAAN,CAAsBiB,IAAtB,GAA6B+B,UAAxC,CADF;;AAEA5B,cAAAA,KAAK,CAACf,UAAN,CAAiBgD,mBAAjB,CAAqC;AACnCpC,gBAAAA,IAAI,EAAEG,KAAK,CAACpB,eAAN,CAAsBiB,IADO;AAEnCD,gBAAAA,GAAG,EAAEI,KAAK,CAACpB,eAAN,CAAsBgB;AAFQ,eAArC;;AAIA;;AAEF,iBAAK7B,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0B6B,OAA1B,CAAkCC,SAAlC,CAA4CC,KAAjD;AACEgB,cAAAA,KAAK,CAACpB,eAAN,CAAsBgB,GAAtB,GACEiC,IAAI,CAACG,KAAL,CAAWhC,KAAK,CAACpB,eAAN,CAAsBgB,GAAtB,GAA4BgC,UAAvC,CADF;;AAEA5B,cAAAA,KAAK,CAACf,UAAN,CAAiBgD,mBAAjB,CAAqC;AACnCpC,gBAAAA,IAAI,EAAEG,KAAK,CAACpB,eAAN,CAAsBiB,IADO;AAEnCD,gBAAAA,GAAG,EAAEI,KAAK,CAACpB,eAAN,CAAsBgB;AAFQ,eAArC;;AAIA;AApCF;AAsCD;AApEH,OAFY,CAAZ;AAyEAE,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EAhoBF,CAkoBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIA,KAAK,GAAG,IAAI5D,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAYqD,UAAhB,CACE,8CADF,EAEZ;AACE,qBAAc,mBADhB;AAGE,wBAAiB,sBAASP,KAAT,EAAgBQ,KAAhB,EACjB;AACE;AACAR,UAAAA,KAAK,CAAC3B,WAAN,GAAoB2B,KAAK,CAACqB,eAA1B,CAFF,CAIE;;AACArB,UAAAA,KAAK,CAACzB,SAAN,CAAgBC,IAAhB,CAAqBwB,KAAK,CAAC3B,WAA3B;AACD;AAVH,OAFY,CAAZ;AAeAyB,MAAAA,KAAK,CAACY,aAAN,CAAoBJ,KAApB,EA1pBF,CA6pBE;AACA;AACA;;AAEA,UAAIR,KAAK,GAAG,IAAIpD,EAAE,CAACO,IAAH,CAAQC,GAAR,CAAY6C,KAAhB,CAAsB,cAAtB,EACZ;AACE,mBAAY,iBAASC,KAAT,EAAgBC,KAAhB,EACZ;AACEvD,UAAAA,EAAE,CAAC8D,KAAH,CAAS0B,KAAT,CAAeC,IAAf,CACE,YACA;AACEtE,YAAAA,IAAI,CAACuE,MAAL,CAAY,KAAKnD,UAAjB;AACA,iBAAKA,UAAL,CAAgBoD,OAAhB;AACA,iBAAKpD,UAAL,GAAkB,IAAlB;AACA,iBAAKoD,OAAL;AACD,WAPH,EAQErC,KARF,EASE,CATF;AAUD,SAbH;AAeE,kBACA;AAhBF,OADY,CAAZ;AAqBA,WAAKK,QAAL,CAAcP,KAAd,EAtrBF,CAwrBE;;AACA,WAAKwC,KAAL;AACD,KAtsBH;AAwsBEC,IAAAA,OAAO,EACP;AACE9C,MAAAA,OAAO,EAAG,GADZ;AAGES,MAAAA,OAAO,EAAG,iBAASsC,OAAT,EACV;AACE;AACA,YAAIC,KAAK,GAAG,IAAI/F,EAAE,CAAC8D,KAAH,CAAS0B,KAAb,CAAmBM,OAAnB,CAAZ,CAFF,CAIE;;AACAC,QAAAA,KAAK,CAACC,WAAN,CACE,UADF,EAEE,YACA;AACED,UAAAA,KAAK,CAACJ,OAAN;AACA,cAAI7B,KAAK,GAAG,IAAI9D,EAAE,CAAC8D,KAAH,CAASgB,IAAT,CAAcC,KAAlB,EAAZ;AACAjB,UAAAA,KAAK,CAACkB,OAAN,CAAc,SAAd;AACA,eAAKC,aAAL,CAAmBnB,KAAnB;AACD,SARH,EASE,IATF,EALF,CAgBE;;AACAiC,QAAAA,KAAK,CAACH,KAAN;AACD;AAtBH;AAzsBF,GADA;AApBAvE,EAAAA,GAAG,CAACC,WAAJ,CAAgBC,IAAhB,CAAqBhB,IAArB,CAA0BiB,QAA1B,CAAmCrB,aAAnC,GAAmDA,aAAnD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Derrell Lipman\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.demobrowser.demo.util.FSMMouse\",\n{\n  extend : qx.util.fsm.FiniteStateMachine,\n\n  statics :\n  {\n    nextMouse   : 1,\n    ticksPerSec : 20,\n    fadeSeconds : 0.5,\n    moveSeconds : 0.2\n  },\n\n  construct : function(origin, maze, facing, view)\n  {\n    // Determine this mouse's name\n    var mouseName = qxl.demobrowser.demo.util.FSMMouse.nextMouse.toString();\n\n    // Call our superclass constructor and provide FSM (mouse) name\n    this.base(arguments, mouseName);\n\n    // Enable all debugging\n\n    // var FSM = qx.util.fsm.FiniteStateMachine;\n    // this.setDebugFlags(FSM.DebugFlags.EVENTS |\n    //                    FSM.DebugFlags.TRANSITIONS |\n    //                    FSM.DebugFlags.FUNCTION_DETAIL |\n    //                    FSM.DebugFlags.OBJECT_NOT_FOUND);\n\n    this.setDebugFlags(0);\n\n    // Update next mouse's name\n    ++qxl.demobrowser.demo.util.FSMMouse.nextMouse;\n\n    // Save this mouse's facing direction\n    this.facing = facing;\n\n    // Save the starting cell\n    if (origin === null)\n    {\n      // This is the initial mouse. Get the location of the starting cell\n      this.currentCell = maze.getStartCell();\n\n      // Initialize our list of traversed cells\n      this.traversed = [];\n\n      // We've traversed our current cell\n      this.traversed.push(this.currentCell);\n\n      // The initial mouse will look behind it in its very first cell\n      this.bLookBehind = true;\n\n      // The initial mouse will look sideways\n      this.bLookSideways = true;\n    }\n    else\n    {\n      // We're a clone.  Our starting cell is our origin's current cell\n      this.currentCell = origin.currentCell;\n\n      // Copy our origin's list of traversed nodes\n      this.traversed = origin.traversed.concat();\n\n      // Clones never look behind themselves\n      this.bLookBehind = false;\n\n      // Clones don't look sideways initially\n      this.bLookSideways = false;\n    }\n\n    // Get the physical location of our current cell\n    this.currentLocation = maze.getCellTopLeft(this.currentCell);\n\n    // Get the appropriate mouse image\n    switch(facing)\n    {\n    case qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH:\n      this.mouseImage =\n        new qx.ui.basic.Image(\"demobrowser/demo/ui/mouse-north.gif\");\n      break;\n\n    case qxl.demobrowser.demo.util.FSMMaze.Direction.EAST:\n      this.mouseImage =\n        new qx.ui.basic.Image(\"demobrowser/demo/ui/mouse-east.gif\");\n      break;\n\n    case qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH:\n      this.mouseImage =\n        new qx.ui.basic.Image(\"demobrowser/demo/ui/mouse-south.gif\");\n      break;\n\n    case qxl.demobrowser.demo.util.FSMMaze.Direction.WEST:\n      this.mouseImage =\n        new qx.ui.basic.Image(\"demobrowser/demo/ui/mouse-west.gif\");\n      break;\n    }\n\n    // Position the mouse and make it initially transparent\n    this.mouseImage.set(\n      {\n        opacity : 0.0,\n        zIndex  : 9999\n      });\n    view.add(this.mouseImage,\n      {top: this.currentLocation.top, left: this.currentLocation.left});\n\n    //============================================================\n    // Create the finite state machine's states and transitions\n    //============================================================\n\n    //////////////////////////////////////////////////////////////\n    // State: FadingIn\n    //\n    // Transition on:\n    //  \"oneshot\"\n    /////////////////////////////////////////////////////////////\n\n    var state = new qx.util.fsm.State(\"State_FadingIn\",\n    {\n      \"onentry\" : function(_this, entry)\n      {\n        // Start a timer to expire shortly\n        _this.oneshot(1000 / qxl.demobrowser.demo.util.FSMMouse.ticksPerSec);\n      },\n\n      \"events\" :\n      {\n        \"oneshot\"  : qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE\n      }\n    });\n\n    this.addState(state);\n\n    // Transition: FadingIn to FadingIn\n    //\n    // Cause: \"oneshot\"\n    //\n    // Predicate : opacity < 1.0\n    //\n    // Action:\n    //  Increase the opacity\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_FadingIn_to_FadingIn_via_Oneshot\",\n    {\n      \"predicate\" : function(_this, event)\n      {\n        return _this.opacity < 1.0;\n      },\n\n      \"nextState\" : \"State_FadingIn\",\n\n      \"ontransition\" : function(_this, event)\n      {\n        // We want fade in to take N seconds\n        _this.opacity +=\n          1 / (qxl.demobrowser.demo.util.FSMMouse.fadeSeconds * qxl.demobrowser.demo.util.FSMMouse.ticksPerSec)\n        _this.mouseImage.setOpacity(_this.opacity);\n      }\n    });\n\n    state.addTransition(trans);\n\n    // Transition: FadingIn to CellArrival\n    //\n    // Cause : \"oneshot\"\n    //\n    // Predicate : None.  We arrive here if previous transition fails.\n    //\n    // Action:\n    //  None\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_FadingIn_to_CellArrival_via_Oneshot\",\n    {\n      \"nextState\" : \"State_CellArrival\"\n    });\n\n    state.addTransition(trans);\n\n\n    /////////////////////////////////////////////////////////////\n    // State: CellArrival\n    //\n    // Transition on:\n    //  \"oneshot\"\n    /////////////////////////////////////////////////////////////\n\n    var state = new qx.util.fsm.State(\"State_CellArrival\",\n    {\n      // Actions on entry:\n\n      //  Determine if there are other possible directions of travel by\n      //  looking left and right.  If either of those directions has no wall,\n      //  then create a new mouse to continue in that direction.\n      \"onentry\" : function(_this, entry)\n      {\n        // Have we reached our destination?\n        var endCell = maze.getEndCell();\n        if (_this.currentCell.row == endCell.row &&\n            _this.currentCell.col == endCell.col)\n        {\n          // Yup.  Generate the backtrack.  Skip the node where the mouse is.\n          for (var i = _this.traversed.length - 2; i >= 0; i--)\n          {\n            maze.markCell(_this.traversed[i]);\n          }\n\n          // No need to continue.\n          return;\n        }\n\n        // Determine what directions we need to look.  We want to look in the\n        // directions that are to our left and to our right.\n        switch(_this.facing)\n        {\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.WEST:\n          // If we were just cloned, unless we're the initial mouse, we don't\n          // need to look for other directions to travel.\n          if (_this.bLookSideways)\n          {\n            // See if we can go south\n            if (maze.getSouthCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH, view);\n            }\n\n            // See if we can go north\n            if (maze.getNorthCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH, view);\n            }\n          }\n\n          // Henceforth, we'll always look sideways\n          _this.bLookSideways = true;\n\n          // If we're the initial mouse, see if we can go east\n          if (_this.bLookBehind &&\n              maze.getEastCell(_this.currentCell) !== null)\n          {\n            // We can.  Create a clone to go that way\n            new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.EAST, view);\n\n            // We only look behind us once.\n            _this.bLookBehind = false;\n          }\n\n          // See if we can continue on our merry way, or if we've hit a wall.\n          _this.destinationCell = maze.getWestCell(_this.currentCell);\n          if (_this.destinationCell !== null)\n          {\n            // We can continue.  Determine our new destination location.\n            _this.destinationLocation =\n              maze.getCellTopLeft(_this.destinationCell);\n\n            // Dispatch an event to cause us to continue.\n            var event = new qx.event.type.Event();\n            event.setType(\"KickInTheAss\");\n            _this.eventListener(event);\n          }\n          else\n          {\n            var event = new qx.event.type.Event();\n            event.setType(\"Die\");\n            _this.eventListener(event);\n          }\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.EAST:\n          // If we were just cloned, unless we're the initial mouse, we don't\n          // need to look for other directions to travel.\n          if (_this.bLookSideways)\n          {\n            // See if we can go south\n            if (maze.getSouthCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH, view);\n            }\n\n            // See if we can go north\n            if (maze.getNorthCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH, view);\n            }\n          }\n\n          // Henceforth, we'll always look sideways\n          _this.bLookSideways = true;\n\n          // If we're the initial mouse, see if we can go west\n          if (_this.bLookBehind &&\n              maze.getWestCell(_this.currentCell) !== null)\n          {\n            // We can.  Create a clone to go that way\n            new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.WEST, view);\n\n            // We only look behind us once.\n            _this.bLookBehind = false;\n          }\n\n          // See if we can continue on our merry way, or if we've hit a wall.\n          _this.destinationCell = maze.getEastCell(_this.currentCell);\n          if (_this.destinationCell !== null)\n          {\n            // We can continue.  Determine our new destination location.\n            _this.destinationLocation =\n              maze.getCellTopLeft(_this.destinationCell);\n\n            // Dispatch an event to cause us to continue.\n            var event = new qx.event.type.Event();\n            event.setType(\"KickInTheAss\");\n            _this.eventListener(event);\n          }\n          else\n          {\n            var event = new qx.event.type.Event();\n            event.setType(\"Die\");\n            _this.eventListener(event);\n          }\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH:\n          // If we were just cloned, unless we're the initial mouse, we don't\n          // need to look for other directions to travel.\n          if (_this.bLookSideways)\n          {\n            // See if we can go west\n            if (maze.getWestCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.WEST, view);\n            }\n\n            // See if we can go east\n            if (maze.getEastCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.EAST, view);\n            }\n          }\n\n          // Henceforth, we'll always look sideways\n          _this.bLookSideways = true;\n\n          // If we're the initial mouse, see if we can go north\n          if (_this.bLookBehind &&\n              maze.getNorthCell(_this.currentCell) !== null)\n          {\n            // We can.  Create a clone to go that way\n            new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH, view);\n\n            // We only look behind us once.\n            _this.bLookBehind = false;\n          }\n\n          // See if we can continue on our merry way, or if we've hit a wall.\n          _this.destinationCell = maze.getSouthCell(_this.currentCell);\n          if (_this.destinationCell !== null)\n          {\n            // We can continue.  Determine our new destination location.\n            _this.destinationLocation =\n              maze.getCellTopLeft(_this.destinationCell);\n\n            // Dispatch an event to cause us to continue.\n            var event = new qx.event.type.Event();\n            event.setType(\"KickInTheAss\")\n            _this.eventListener(event);\n          }\n          else\n          {\n            var event = new qx.event.type.Event();\n            event.setType(\"Die\");\n            _this.eventListener(event);\n          }\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH:\n          // If we were just cloned, unless we're the initial mouse, we don't\n          // need to look for other directions to travel.\n          if (_this.bLookSideways)\n          {\n            // See if we can go west\n            if (maze.getWestCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.WEST, view);\n            }\n\n            // See if we can go east\n            if (maze.getEastCell(_this.currentCell) !== null)\n            {\n              // We can.  Create a clone to go that way\n              new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.EAST, view);\n            }\n          }\n\n          // Henceforth, we'll always look sideways\n          _this.bLookSideways = true;\n\n          // If we're the initial mouse, see if we can go south\n          if (_this.bLookBehind &&\n              maze.getSouthCell(_this.currentCell) !== null)\n          {\n            // We can.  Create a clone to go that way\n            new qxl.demobrowser.demo.util.FSMMouse(_this, maze, qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH, view);\n\n            // We only look behind us once.\n            _this.bLookBehind = false;\n          }\n\n          // See if we can continue on our merry way, or if we've hit a wall.\n          _this.destinationCell = maze.getNorthCell(_this.currentCell);\n          if (_this.destinationCell !== null)\n          {\n            // We can continue.  Determine our new destination location.\n            _this.destinationLocation =\n              maze.getCellTopLeft(_this.destinationCell);\n\n            // Dispatch an event to cause us to continue.\n            var event = new qx.event.type.Event();\n            event.setType(\"KickInTheAss\");\n            _this.eventListener(event);\n          }\n          else\n          {\n            var event = new qx.event.type.Event();\n            event.setType(\"Die\");\n            _this.eventListener(event);\n          }\n          break;\n        }\n\n        _this.bLookBehind = false;\n      },\n\n      \"events\" :\n      {\n        \"Die\"          : \"Transition_CellArrival_to_FadingOut_via_Die\",\n        \"KickInTheAss\" : \"Transition_CellArrival_to_Moving_via_KickInTheAss\"\n      }\n    });\n\n    this.addState(state);\n\n    // Transition: CellArrival to FadingOut\n    //\n    // Cause: \"Die\"\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_CellArrival_to_FadingOut_via_Die\",\n    {\n      \"nextState\" : \"State_FadingOut\"\n    });\n\n    state.addTransition(trans);\n\n    // Transition: CellArrival to Moving\n    //\n    // Cause: \"KickInTheAss\"\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_CellArrival_to_Moving_via_KickInTheAss\",\n    {\n      \"nextState\" : \"State_Moving\"\n    });\n\n    state.addTransition(trans);\n\n\n    /////////////////////////////////////////////////////////////\n    // State: FadingOut\n    //\n    // Transition on:\n    //  \"oneshot\"\n    /////////////////////////////////////////////////////////////\n\n    var state = new qx.util.fsm.State(\"State_FadingOut\",\n    {\n      \"onentry\" : function(_this, entry)\n      {\n        // Start a timer to expire shortly\n        _this.oneshot(1000 / qxl.demobrowser.demo.util.FSMMouse.ticksPerSec);\n      },\n\n      \"events\" :\n      {\n        \"oneshot\"  : qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE\n      }\n    });\n\n    this.addState(state);\n\n    // Transition: FadingOut to FadingOut\n    //\n    // Cause: \"oneshot\"\n    //\n    // Predicate : opacity > 0.0\n    //\n    // Action:\n    //  Decrease the opacity\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_FadingOut_to_FadingOut_via_Oneshot\",\n    {\n      \"predicate\" : function(_this, event)\n      {\n        return _this.opacity > 0.0;\n      },\n\n      \"nextState\" : \"State_FadingOut\",\n\n      \"ontransition\" : function(_this, event)\n      {\n        // We want fade in to take N seconds\n        _this.opacity -=\n          1 / (qxl.demobrowser.demo.util.FSMMouse.fadeSeconds * qxl.demobrowser.demo.util.FSMMouse.ticksPerSec);\n        if (_this.opacity < 0.0)\n        {\n          _this.opacity = 0.0;\n        }\n        _this.mouseImage.setOpacity(_this.opacity);\n      }\n    });\n\n    state.addTransition(trans);\n\n    // Transition: FadingOut to Zombie\n    //\n    // Cause : \"oneshot\"\n    //\n    // Predicate : None.  We arrive here if previous transition fails.\n    //\n    // Action:\n    //  None\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_FadingOut_to_Zombie_via_Oneshot\",\n    {\n      \"nextState\" : \"State_Zombie\"\n    });\n\n    state.addTransition(trans);\n\n\n    /////////////////////////////////////////////////////////////\n    // State: Moving\n    //\n    // Transition on:\n    //  \"oneshot\"\n    /////////////////////////////////////////////////////////////\n\n    var state = new qx.util.fsm.State(\"State_Moving\",\n    {\n      \"onentry\" : function(_this, entry)\n      {\n        // Start a timer to expire shortly\n        _this.oneshot(1000 / qxl.demobrowser.demo.util.FSMMouse.ticksPerSec);\n      },\n\n      \"events\" :\n      {\n        \"oneshot\"  : qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE\n      }\n    });\n\n    this.addState(state);\n\n    // Transition: Moving to Moving\n    //\n    // Cause: \"oneshot\"\n    //\n    // Predicate : destination cell not yet reached\n    //\n    // Action:\n    //  Move towards the destination cell\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_Moving_to_Moving_via_Oneshot\",\n    {\n      \"predicate\" : function(_this, event)\n      {\n        switch(_this.facing)\n        {\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.WEST:\n          return _this.currentLocation.left > _this.destinationLocation.left;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH:\n          return _this.currentLocation.top < _this.destinationLocation.top;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.EAST:\n          return _this.currentLocation.left < _this.destinationLocation.left;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH:\n          return _this.currentLocation.top > _this.destinationLocation.top;\n\n        }\n      },\n\n      \"nextState\" : \"State_Moving\",\n\n      \"ontransition\" : function(_this, event)\n      {\n        // We want move to take N seconds\n        var moveAmount =\n          Math.ceil(maze.cellSize /\n                    (qxl.demobrowser.demo.util.FSMMouse.moveSeconds * qxl.demobrowser.demo.util.FSMMouse.ticksPerSec));\n\n        // Determine which direction we're moving, and move.\n        switch(_this.facing)\n        {\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.WEST:\n          _this.currentLocation.left =\n            Math.round(_this.currentLocation.left - moveAmount);\n          _this.mouseImage.setLayoutProperties({\n            left: _this.currentLocation.left,\n            top: _this.currentLocation.top\n          });\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.SOUTH:\n          _this.currentLocation.top =\n            Math.round(_this.currentLocation.top + moveAmount);\n          _this.mouseImage.setLayoutProperties({\n            left: _this.currentLocation.left,\n            top: _this.currentLocation.top\n          });\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.EAST:\n          _this.currentLocation.left =\n            Math.round(_this.currentLocation.left + moveAmount);\n          _this.mouseImage.setLayoutProperties({\n            left: _this.currentLocation.left,\n            top: _this.currentLocation.top\n          });\n          break;\n\n        case qxl.demobrowser.demo.util.FSMMaze.Direction.NORTH:\n          _this.currentLocation.top =\n            Math.round(_this.currentLocation.top - moveAmount);\n          _this.mouseImage.setLayoutProperties({\n            left: _this.currentLocation.left,\n            top: _this.currentLocation.top\n          });\n          break;\n        }\n      }\n    });\n\n    state.addTransition(trans);\n\n    // Transition: Moving to CellArrival\n    //\n    // Cause: \"oneshot\"\n    //\n    // Predicate : destination cell has been reached\n    //\n    // Action:\n    //  Move towards the destination cell\n\n    var trans = new qx.util.fsm.Transition(\n                  \"Transition_Moving_to_CellArrival_via_Oneshot\",\n    {\n      \"nextState\" : \"State_CellArrival\",\n\n      \"ontransition\" : function(_this, event)\n      {\n        // We're now at the destination cell.\n        _this.currentCell = _this.destinationCell;\n\n        // Save the path.  Record that we've visited this destination cell.\n        _this.traversed.push(_this.currentCell);\n      }\n    });\n\n    state.addTransition(trans);\n\n\n    /////////////////////////////////////////////////////////////\n    // State: Zombie\n    /////////////////////////////////////////////////////////////\n\n    var state = new qx.util.fsm.State(\"State_Zombie\",\n    {\n      \"onentry\" : function(_this, entry)\n      {\n        qx.event.Timer.once(\n          function()\n          {\n            view.remove(this.mouseImage);\n            this.mouseImage.dispose();\n            this.mouseImage = null;\n            this.dispose();\n          },\n          _this,\n          0);\n      },\n\n      \"events\" :\n      {\n      }\n    });\n\n    this.addState(state);\n\n    // Start the finite state machine running\n    this.start();\n  },\n\n  members :\n  {\n    opacity : 0.0,\n\n    oneshot : function(timeout)\n    {\n      // Create time instance\n      var timer = new qx.event.Timer(timeout);\n\n      // Add event listener to interval\n      timer.addListener(\n        \"interval\",\n        function()\n        {\n          timer.dispose();\n          var event = new qx.event.type.Event();\n          event.setType(\"oneshot\");\n          this.eventListener(event);\n        },\n        this);\n\n      // Directly start timer\n      timer.start();\n    }\n  }\n});"
  ]
}