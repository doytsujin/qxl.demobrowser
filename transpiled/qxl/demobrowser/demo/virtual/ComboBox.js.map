{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/virtual/ComboBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "_createDefaultExample",
    "_createIconExample",
    "_createWideExample",
    "_createHtmlExample",
    "label",
    "ui",
    "basic",
    "Label",
    "setFont",
    "getRoot",
    "add",
    "left",
    "top",
    "comboBox",
    "form",
    "VirtualComboBox",
    "rawData",
    "i",
    "push",
    "Math",
    "pow",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "addListener",
    "e",
    "debug",
    "getData",
    "icon",
    "setLabelPath",
    "setIconPath",
    "set",
    "width",
    "items",
    "delegate",
    "configureItem",
    "item",
    "setRich",
    "setDelegate",
    "setDefaultFormat",
    "lang",
    "String",
    "stripTags",
    "bom",
    "unescape",
    "sorter",
    "a",
    "b",
    "filter",
    "num",
    "parseInt",
    "exec",
    "qxl",
    "demobrowser",
    "demo",
    "virtual",
    "ComboBox"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.demobrowser.demo.virtual.ComboBox\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    /**\n     * TODOC\n     *\n     * @return {void}\n     */\n    main : function()\n    {\n      this.base(arguments);\n\n      // examlpe 1: default combo box with 30 text items\n      this._createDefaultExample();\n\n      // example 2: combo box with text and icons\n      this._createIconExample();\n\n      // example 3: wide combo box with a large list\n      this._createWideExample();\n\n      // example 4: combo combo box with HTML (rich) text\n      this._createHtmlExample();\n    },\n\n\n    /**\n     * Creates a default example.\n     * This means that a regular combobox will be created and filled with\n     * some templates.\n     *\n     * @return {void}\n     */\n    _createDefaultExample : function()\n    {\n      // create and add the describing label\n      var label = new qx.ui.basic.Label(\"Default\");\n      label.setFont(\"bold\");\n\n      this.getRoot().add(label,\n      {\n        left : 20,\n        top  : 20\n      });\n\n      // create a combo box\n      var comboBox = new qx.ui.form.VirtualComboBox();\n\n      //create a simple model\n      var rawData = [];\n      for (var i=1; i<401; i++)\n      {\n        rawData.push(\"2^ \" + i + \" = \" + Math.pow(2, i));\n      }\n      var model = qx.data.marshal.Json.createModel(rawData);\n      comboBox.setModel(model);\n\n      comboBox.addListener(\"changeValue\", function(e) {\n        this.debug(\"ChangeValue: \" + e.getData());\n      });\n\n      // add the combobox to the documents root\n      this.getRoot().add(comboBox,\n      {\n        left : 20,\n        top  : 40\n      });\n    },\n\n\n    /**\n     * Creates a icon example.\n     * This means that a combobox will be created and filled with\n     * some icons and text. in the textfield of the combo box is only\n     * the text displayed.\n     *\n     * @return {void}\n     */\n    _createIconExample : function()\n    {\n      // create and add the describing label\n      var label = new qx.ui.basic.Label(\"With icons\");\n      label.setFont(\"bold\");\n\n      this.getRoot().add(label,\n      {\n        left : 160,\n        top  : 20\n      });\n\n      // create a combo box\n      var comboBox = new qx.ui.form.VirtualComboBox();\n\n      // create the model\n      var rawData = [];\n      for (var i=1; i<31; i++)\n      {\n        rawData.push({\n          label : i + \"'s Icon\",\n          icon : \"icon/16/places/folder.png\"\n        });\n      }\n      var model = qx.data.marshal.Json.createModel(rawData);\n      comboBox.setModel(model);\n      comboBox.setLabelPath(\"label\");\n      comboBox.setIconPath(\"icon\");\n\n      // add the combobox to the documents root\n      this.getRoot().add(comboBox,\n      {\n        left : 160,\n        top  : 40\n      });\n    },\n\n    /**\n     * Creates a HTML example.\n     * This means that a combobox will be created and filled with\n     * some text, that contain HTML tags and entities.\n     *\n     * @return {void}\n     */\n    _createHtmlExample : function()\n    {\n      // create and add the describing label\n      var label = new qx.ui.basic.Label(\"With HTML (rich) text\");\n      label.setFont(\"bold\");\n\n      this.getRoot().add(label,\n      {\n        left : 300,\n        top  : 20\n      });\n\n      // create a combo box\n      var comboBox = new qx.ui.form.VirtualComboBox().set({width: 200});\n\n      var items = [\"... &gt; (as literal HTML entity)\",\n                   \"... &gt; (as Richtext)\",\n                   \"<b>Bold Text</b>\",\n                   \"<u>Underlined Text</u>\",\n                   \"<i>Italic Text</i>\",\n                   \"HTML entities: &laquo; &lt; &amp; &gt; &raquo;\"];\n\n      // create the model\n      var model = qx.data.marshal.Json.createModel(items);\n      comboBox.setModel(model);\n\n      // Set the created list item's \"rich\" property\n      var delegate = {\n        configureItem : function(item)\n        {\n          item.setRich(true);\n        }\n      }\n\n      comboBox.setDelegate(delegate);\n\n      // Provide a formatting function to convert the displayed value back to\n      // plain text\n      comboBox.setDefaultFormat(function(data) {\n        if (data) {\n          data = qx.lang.String.stripTags(data);\n          data = qx.bom.String.unescape(data);\n        }\n        return data;\n      });\n\n      // add the combobox to the documents root\n      this.getRoot().add(comboBox,\n      {\n        left : 300,\n        top  : 40\n      });\n    },\n\n    /**\n     * TODOC\n     *\n     * @return {void}\n     */\n    _createWideExample : function()\n    {\n      // create and add the describing label\n      var label = new qx.ui.basic.Label(\"Sorted and filtered model\");\n      label.setFont(\"bold\");\n\n      this.getRoot().add(label,\n      {\n        left : 20,\n        top  : 280\n      });\n\n      // create a combo box\n      var comboBox = new qx.ui.form.VirtualComboBox();\n\n      //create a simple model\n      var rawData = [];\n      for (var i=1; i<100; i++)\n      {\n        rawData.push(\"Item \" + i);\n      }\n      var model = qx.data.marshal.Json.createModel(rawData);\n      comboBox.setModel(model);\n\n      var delegate = {\n        // Inverts the order\n        sorter : function(a, b) {\n          return a < b ? 1 : a > b ? -1 : 0;\n        },\n        // Remove even-numbered items\n        filter : function(item) {\n          var num = parseInt(/([0-9]+)/.exec(item)[1], 10);\n          return num % 2 ? true : false;\n        }\n      }\n\n      comboBox.setDelegate(delegate);\n\n      // add the combobox to the documents root\n      this.getRoot().add(comboBox,\n      {\n        left : 20,\n        top  : 300\n      });\n    }\n\n\n  }\n});\n"
  ]
}