{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/virtual/DemoLayer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "WidgetCell",
    "construct",
    "_pool",
    "atom",
    "checkbox",
    "__rowData",
    "members",
    "getCellData",
    "row",
    "column",
    "label",
    "__generateName",
    "icon",
    "__getIcon",
    "getCellWidget",
    "widget",
    "pop",
    "basic",
    "Atom",
    "addListener",
    "setIcon",
    "set",
    "form",
    "CheckBox",
    "setLabel",
    "getLabel",
    "getUserData",
    "value",
    "setUserData",
    "poolCellWidget",
    "classname",
    "push",
    "name",
    "j",
    "String",
    "fromCharCode",
    "Math",
    "floor",
    "random",
    "prefix",
    "suffix",
    "iconImages",
    "imageId",
    "destruct",
    "qxl",
    "demobrowser",
    "demo",
    "DemoLayer"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Fabian Jakobs (fjakobs)\n   * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/icon/${qx.icontheme}/16/places/*)\n */\n\nqx.Class.define(\"qxl.demobrowser.demo.virtual.DemoLayer\",\n{\n  extend : qx.ui.virtual.layer.WidgetCell,\n\n  construct : function()\n  {\n    this.base(arguments, this);\n    this._pool = {\n      atom : [],\n      checkbox : []\n    };\n\n    this.__rowData = [];\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _pool : null,\n    __rowData : null,\n\n    getCellData : function(row, column)\n    {\n      if (!this.__rowData[row]) {\n        this.__rowData[row] = [];\n      }\n      if (!this.__rowData[row][column])\n      {\n        this.__rowData[row][column] = {\n          label: this.__generateName(),\n          icon: this.__getIcon()\n        }\n      }\n      return this.__rowData[row][column];\n    },\n\n\n    getCellWidget : function(row, column)\n    {\n      var widget;\n\n      if (column % 2 == 0)\n      {\n        widget = this._pool.atom.pop();\n        if (!widget) {\n          widget = new qx.ui.basic.Atom();\n          widget.addListener(\"pointerover\", function()\n          {\n            var icon = this.__getIcon();\n            widget.setIcon(icon);\n            this.__rowData[row][column].icon = icon;\n          }, this);\n        }\n        widget.set(this.getCellData(row, column));\n      }\n      else\n      {\n        widget = this._pool.checkbox.pop();\n        if (!widget)\n        {\n          widget = new qx.ui.form.CheckBox();\n          widget.addListener(\"changeValue\", function(){\n            this.setLabel(this.getLabel() == \"foobar!\" ? widget.getUserData(\"row\") + \" / \" + widget.getUserData(\"column\") : \"foobar!\");\n          }, widget);\n        }\n        widget.set({\n          value : row % 2 == 0,\n          label : row + \" / \" + column\n        });\n      }\n\n      widget.setUserData(\"row\", row);\n      widget.setUserData(\"column\", column);\n\n      return widget;\n    },\n\n\n    poolCellWidget: function(widget) {\n      if (widget.classname == \"qx.ui.basic.Atom\") {\n        this._pool.atom.push(widget)\n      } else {\n        this._pool.checkbox.push(widget)\n      }\n    },\n\n\n    __generateName : function()\n    {\n      var name = \"\";\n      for (var j=0; j<10; j++) {\n        name += String.fromCharCode(Math.floor(Math.random()*25)+65);\n      }\n      return name;\n    },\n\n    __getIcon : function()\n    {\n      var prefix = \"icon/\";\n      var suffix = \"places/\";\n\n      var iconImages = [\n        \"folder.png\",\n        \"user-trash.png\",\n        \"network-server.png\",\n        \"network-workgroup.png\",\n        \"user-desktop.png\"\n      ];\n\n      var imageId = Math.floor(Math.random()*4);\n\n      return (prefix + 16 + \"/\" + suffix + iconImages[imageId]);\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function() {\n    this._pool = this.__rowData = null;\n  }\n});\n"
  ]
}