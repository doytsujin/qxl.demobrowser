{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.demobrowser/qxl.demobrowser/source/class/qxl/demobrowser/demo/virtual/Tree_Dynamic.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "count",
    "main",
    "root",
    "label",
    "children",
    "icon",
    "loaded",
    "data",
    "marshal",
    "Json",
    "createModel",
    "createRandomData",
    "tree",
    "ui",
    "VirtualTree",
    "getRoot",
    "add",
    "edge",
    "setIconPath",
    "setIconOptions",
    "converter",
    "value",
    "model",
    "getChildren",
    "that",
    "delegate",
    "bindItem",
    "controller",
    "item",
    "index",
    "bindDefaultProperties",
    "bindProperty",
    "source",
    "target",
    "isOpen",
    "getLoaded",
    "setLoaded",
    "event",
    "Timer",
    "once",
    "setAutoScrollIntoView",
    "removeAll",
    "setDelegate",
    "parent",
    "items",
    "parseInt",
    "Math",
    "random",
    "i",
    "node",
    "push",
    "qxl",
    "demobrowser",
    "demo",
    "virtual",
    "Tree_Dynamic"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n * @tag noPlayground\n *\n * @asset(qx/icon/${qx.icontheme}/22/places/folder.png)\n * @asset(qx/icon/${qx.icontheme}/22/mimetypes/office-document.png)\n * @asset(qxl/demobrowser/demo/icons/loading22.gif)\n */\nqx.Class.define(\"qxl.demobrowser.demo.virtual.Tree_Dynamic\",\n{\n  extend : qx.application.Standalone,\n\n  members :\n  {\n    count : 0,\n\n    main : function()\n    {\n      this.base(arguments);\n\n      var root = {\n        label: \"Root\",\n        children: [],\n        icon: \"default\",\n        loaded: true\n      };\n      root = qx.data.marshal.Json.createModel(root, true)\n      this.createRandomData(root);\n\n      var tree = new qx.ui.tree.VirtualTree(root, \"label\", \"children\");\n      this.getRoot().add(tree, {edge: 20});\n\n      tree.setIconPath(\"icon\");\n      tree.setIconOptions({\n        converter : function(value, model)\n        {\n          if (value == \"default\") {\n            if (model.getChildren != null) {\n              return \"icon/22/places/folder.png\";\n            } else {\n              return \"icon/22/mimetypes/office-document.png\";\n            }\n          } else {\n            return \"demobrowser/demo/icons/loading22.gif\";\n          }\n        }\n      });\n\n      var that = this;\n      var delegate = {\n        bindItem : function(controller, item, index)\n        {\n          controller.bindDefaultProperties(item, index);\n\n          controller.bindProperty(\"\", \"open\",\n          {\n            converter : function(value, model, source, target)\n            {\n              var isOpen = target.isOpen();\n              if (isOpen && !value.getLoaded())\n              {\n                value.setLoaded(true);\n\n                qx.event.Timer.once(function()\n                {\n                  tree.setAutoScrollIntoView(false);\n                  value.getChildren().removeAll();\n                  this.createRandomData(value);\n                  tree.setAutoScrollIntoView(true);\n                }, that, 1000);\n              }\n\n              return isOpen;\n            }\n          }, item, index);\n        }\n      };\n      tree.setDelegate(delegate);\n    },\n\n    createRandomData : function(parent)\n    {\n      var items = parseInt(Math.random() * 50);\n\n      for (var i = 0; i < items; i++) {\n        var node = {\n          label: \"Item \" + this.count++,\n          icon: \"default\",\n          loaded: true\n        }\n\n        if (Math.random() > 0.3)\n        {\n          node[\"loaded\"] = false;\n          node[\"children\"] = [{\n            label: \"Loading\",\n            icon: \"loading\"\n          }];\n        }\n\n        parent.getChildren().push(qx.data.marshal.Json.createModel(node, true));\n      }\n    }\n  }\n});\n"
  ]
}