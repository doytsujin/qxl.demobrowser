{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/qxl.demobrowser/source/class/qxl/demobrowser/demo/virtual/list/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "core",
    "Scroller",
    "implement",
    "IWidgetCellProvider",
    "construct",
    "getItemHeight",
    "__widgetLayer",
    "layer",
    "WidgetCell",
    "getPane",
    "addLayer",
    "addListener",
    "_onResize",
    "__items",
    "__pool",
    "__selectionManager",
    "selection",
    "Row",
    "_onChangeSelection",
    "attachPointerEvents",
    "attachKeyEvents",
    "attachListEvents",
    "behavior",
    "Prefetch",
    "minLeft",
    "maxLeft",
    "minRight",
    "maxRight",
    "minAbove",
    "maxAbove",
    "minBelow",
    "maxBelow",
    "set",
    "interval",
    "events",
    "addItem",
    "removeItem",
    "changeValue",
    "changeSelection",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "spacing",
    "check",
    "apply",
    "themeable",
    "enableInlineFind",
    "name",
    "nullable",
    "event",
    "itemHeight",
    "selectionMode",
    "dragSelection",
    "quickSelection",
    "members",
    "syncWidget",
    "update",
    "rowConfig",
    "getRowConfig",
    "setItemCount",
    "length",
    "resetItemSizes",
    "i",
    "height",
    "getHeight",
    "setItemSize",
    "updateSelection",
    "widgets",
    "getChildren",
    "widget",
    "row",
    "getUserData",
    "isItemSelected",
    "addState",
    "removeState",
    "e",
    "getColumnConfig",
    "getData",
    "width",
    "queue",
    "Widget",
    "add",
    "_onChangeItemHeight",
    "fireDataEvent",
    "__rowsToItems",
    "getCellWidget",
    "column",
    "data",
    "pop",
    "form",
    "ListItem",
    "label",
    "getLabel",
    "icon",
    "getIcon",
    "setUserData",
    "poolCellWidget",
    "push",
    "getValue",
    "selected",
    "getSelection",
    "result",
    "value",
    "l",
    "join",
    "setValue",
    "splitted",
    "split",
    "item",
    "findItem",
    "setSelection",
    "hasChildren",
    "_addHelper",
    "child",
    "_removeHelper",
    "removeListener",
    "remove",
    "lang",
    "Array",
    "removeAll",
    "j",
    "indexOf",
    "addAt",
    "index",
    "insertAt",
    "addBefore",
    "before",
    "insertBefore",
    "addAfter",
    "after",
    "insertAfter",
    "removeAt",
    "splice",
    "__itemToRow",
    "__rowToItem",
    "__itemsToRows",
    "items",
    "rows",
    "selectAll",
    "setSelected",
    "selectItem",
    "isSelected",
    "addToSelection",
    "removeFromSelection",
    "selectRange",
    "begin",
    "end",
    "selectItemRange",
    "resetSelection",
    "clearSelection",
    "replaceSelection",
    "getSelectedItem",
    "getSelected",
    "getSortedSelection",
    "isSelectionEmpty",
    "getSelectionContext",
    "getSelectables",
    "_applySelectionMode",
    "old",
    "setMode",
    "_applyDragSelection",
    "setDrag",
    "_applyQuickSelection",
    "setQuick",
    "qxl",
    "demobrowser",
    "demo",
    "list",
    "List"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.demobrowser.demo.virtual.list.List\",\n{\n  extend : qx.ui.virtual.core.Scroller,\n\n  implement : [\n    qx.ui.virtual.core.IWidgetCellProvider\n  ],\n\n\n  construct : function()\n  {\n    this.base(arguments, 0, 1, this.getItemHeight(), 10);\n\n    this.__widgetLayer = new qx.ui.virtual.layer.WidgetCell(this);\n    this.getPane().addLayer(this.__widgetLayer)\n    this.getPane().addListener(\"resize\", this._onResize, this);\n\n    this.__items = [];\n    this.__pool = [];\n\n    this.__selectionManager = new qx.ui.virtual.selection.Row(this.getPane());\n    this.__selectionManager.addListener(\"changeSelection\", this._onChangeSelection, this);\n    this.__selectionManager.attachPointerEvents();\n    this.__selectionManager.attachKeyEvents(this);\n    this.__selectionManager.attachListEvents(this);\n\n    // Creates the prefetch behavior\n    new qx.ui.virtual.behavior.Prefetch(\n      this,\n      {\n        minLeft : 0,\n        maxLeft : 0,\n        minRight : 0,\n        maxRight : 0,\n        minAbove : 400,\n        maxAbove : 600,\n        minBelow : 400,\n        maxBelow : 600\n      }\n    ).set({\n      interval: 500\n    });\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : \"qx.event.type.Data\",\n\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : \"qx.event.type.Data\",\n\n\n    /**\n     * Fired on every modification of the selection which also means that the\n     * value has been modified.\n     */\n    changeValue : \"qx.event.type.Data\",\n\n\n    /** Fires after the selection was modified */\n    changeSelection : \"qx.event.type.Data\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"list\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    /** Spacing between the items */\n    spacing :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applySpacing\",\n      themeable : true\n    },\n\n\n    /** Controls whether the inline-find feature is activated or not */\n    enableInlineFind :\n    {\n      check : \"Boolean\",\n      init : true\n    },\n\n\n    /** The name of the list. Mainly used for serialization proposes. */\n    name :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeName\"\n    },\n\n\n    itemHeight :\n    {\n      init : 24,\n      themeable : true,\n      check : \"Number\",\n      apply : \"_applyItemHeight\"\n    },\n\n\n    /**\n     * The selection mode to use.\n     *\n     * For further details please have a look at:\n     * {@link qx.ui.core.selection.Abstract#mode}\n     */\n    selectionMode :\n    {\n      check : [ \"single\", \"multi\", \"additive\", \"one\" ],\n      init : \"single\",\n      apply : \"_applySelectionMode\"\n    },\n\n\n    /**\n     * Enable drag selection (multi selection of items through\n     * dragging the mouse in pressed states).\n     *\n     * Only possible for the selection modes <code>multi</code> and <code>additive</code>\n     */\n    dragSelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDragSelection\"\n    },\n\n\n    /**\n     * Enable quick selection mode, where no tap is needed to change the selection.\n     *\n     * Only possible for the modes <code>single</code> and <code>one</code>.\n     */\n    quickSelection :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyQuickSelection\"\n    }\n  },\n\n\n  members :\n  {\n    __items : null,\n    __pool : null,\n    __selectionManager : null,\n    __widgetLayer : null,\n\n    syncWidget : function() {\n      this.update();\n    },\n\n\n    update : function()\n    {\n      var rowConfig = this.getPane().getRowConfig();\n      rowConfig.setItemCount(this.__items.length);\n\n      rowConfig.resetItemSizes();\n      for(var i=0; i<this.__items.length; i++)\n      {\n        var height = this.__items[i].getHeight();\n        if (height !== null) {\n          rowConfig.setItemSize(i, height);\n        }\n      }\n    },\n\n\n    updateSelection : function()\n    {\n      var widgets = this.__widgetLayer.getChildren();\n      for (var i=0; i<widgets.length; i++)\n      {\n        var widget = widgets[i];\n        var row = widget.getUserData(\"row\");\n\n        if (this.__selectionManager.isItemSelected(row)) {\n          widget.addState(\"selected\");\n        } else {\n          widget.removeState(\"selected\");\n        }\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    _onResize : function(e)\n    {\n      this.getPane().getColumnConfig().setItemSize(0, e.getData().width);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    _onChangeItemHeight : function(e) {\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    _onChangeSelection : function(e)\n    {\n      this.updateSelection();\n      this.fireDataEvent(\"changeSelection\", this.__rowsToItems(e.getData()));\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CELL PROVIDER API\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    getCellWidget : function(row, column)\n    {\n      var data = this.__items[row];\n      if (!data) {\n        return null;\n      }\n\n      var widget = this.__pool.pop() || new qx.ui.form.ListItem();\n      widget.set({\n        label : data.getLabel(),\n        icon : data.getIcon()\n      });\n\n      if (this.__selectionManager.isItemSelected(row)) {\n        widget.addState(\"selected\");\n      } else {\n        widget.removeState(\"selected\");\n      }\n      widget.setUserData(\"row\", row);\n\n      return widget;\n    },\n\n    // interface implementation\n    poolCellWidget : function(widget) {\n      this.__pool.push(widget);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FORM ELEMENT API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the stringified value of the list. This is a comma\n     * separated string with all the values (or labels as fallback).\n     *\n     * @return {String} Value of the list\n     */\n    getValue : function()\n    {\n      var selected = this.getSelection();\n      var result = [];\n      var value;\n\n      for (var i=0, l=selected.length; i<l; i++)\n      {\n        // Try value first\n        value = selected[i].getValue();\n\n        // Fallback to label\n        if (value == null) {\n          value = selected[i].getLabel();\n        }\n\n        result.push(value);\n      }\n\n      return result.join(\",\");\n    },\n\n\n    /**\n     * Applied new selection from a comma separated list of values (labels\n     * as fallback) of the list items.\n     *\n     * @param value {String} Comma separated list\n     */\n    setValue : function(value)\n    {\n      // Clear current selection\n      var splitted = value.split(\",\");\n\n      // Building result list\n      var result = [];\n      var item;\n      for (var i=0, l=splitted.length; i<l; i++)\n      {\n        item = this.findItem(splitted[i]);\n        if (item) {\n          result.push(item);\n        }\n      }\n\n      // Replace current selection\n      this.setSelection(result);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the children list\n     *\n     * @return {LayoutItem[]} The children array (Arrays are\n     *   reference types, please do not modify them in-place)\n     */\n    getChildren : function() {\n      return this.__items;\n    },\n\n\n    /**\n     * Whether the widget contains children.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget has children.\n     */\n    hasChildren : function() {\n      return this.__items.length > 0;\n    },\n\n\n    _addHelper : function(child)\n    {\n      this.fireDataEvent(\"addItem\", child);\n      child.addListener(\"changeHeight\", this._onChangeItemHeight, this);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    _removeHelper : function(child)\n    {\n      this.fireDataEvent(\"removeItem\", child);\n      child.removeListener(\"changeHeight\", this._onChangeItemHeight, this);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n\n    /**\n     * Adds a new child widget.\n     *\n     * The supported keys of the layout options map depend on the layout manager\n     * used to position the widget. The options are documented in the class\n     * documentation of each layout manager {@link qx.ui.layout}.\n     *\n     * @param child {LayoutItem} the item to add.\n     * @return {Widget} This object (for chaining support)\n     */\n    add : function(child)\n    {\n      this.__items.push(child);\n      this._addHelper(child);\n      return this;\n    },\n\n\n    /**\n     * Remove the given child item.\n     *\n     * @param child {LayoutItem} the item to remove\n     * @return {Widget} This object (for chaining support)\n     */\n    remove : function(child)\n    {\n      qx.lang.Array.remove(this.__items, child);\n      this._removeHelper(child);\n      return this;\n    },\n\n\n    /**\n     * Remove all children.\n     *\n     * @return {void}\n     */\n    removeAll : function()\n    {\n      for (var i=0,j=this.__items.length; i<j; i++) {\n        this._removeHelper(this.__items[i]);\n      }\n      this.__items = [];\n    },\n\n\n    /**\n     * Returns the index position of the given item if it is\n     * a child item. Otherwise it returns <code>-1</code>.\n     *\n     * This method works on the widget's children list. Some layout managers\n     * (e.g. {@link qx.ui.layout.HBox}) use the children order as additional\n     * layout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\n     * ignore the children order for the layout process.\n     *\n     * @param child {LayoutItem} the item to query for\n     * @return {Integer} The index position or <code>-1</code> when\n     *   the given item is no child of this layout.\n     */\n    indexOf : function(child) {\n      return this.__items.indexOf(child);\n    },\n\n\n    /**\n     * Add a child at the specified index\n     *\n     * This method works on the widget's children list. Some layout managers\n     * (e.g. {@link qx.ui.layout.HBox}) use the children order as additional\n     * layout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\n     * ignore the children order for the layout process.\n     *\n     * @param child {LayoutItem} item to add\n     * @param index {Integer} Index, at which the item will be inserted\n     */\n    addAt : function(child, index)\n    {\n      qx.lang.Array.insertAt(this.__items, child, index);\n      this._addHelper(child);\n    },\n\n\n    /**\n     * Add a item before another already inserted item\n     *\n     * This method works on the widget's children list. Some layout managers\n     * (e.g. {@link qx.ui.layout.HBox}) use the children order as additional\n     * layout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\n     * ignore the children order for the layout process.\n     *\n     * @param child {LayoutItem} item to add\n     * @param before {LayoutItem} item before the new item will be inserted.\n     */\n    addBefore : function(child, before)\n    {\n      qx.lang.Array.insertBefore(this.__items, child, before);\n      this._addHelper(child);\n    },\n\n\n    /**\n     * Add a item after another already inserted item\n     *\n     * This method works on the widget's children list. Some layout managers\n     * (e.g. {@link qx.ui.layout.HBox}) use the children order as additional\n     * layout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\n     * ignore the children order for the layout process.\n     *\n     * @param child {LayoutItem} item to add\n     * @param after {LayoutItem} item, after which the new item will be inserted\n     */\n    addAfter : function(child, after)\n    {\n      qx.lang.Array.insertAfter(this.__items, child, after);\n      this._addHelper(child);\n    },\n\n\n    /**\n     * Remove the item at the specified index.\n     *\n     * This method works on the widget's children list. Some layout managers\n     * (e.g. {@link qx.ui.layout.HBox}) use the children order as additional\n     * layout information. Other layout manager (e.g. {@link qx.ui.layout.Grid})\n     * ignore the children order for the layout process.\n     *\n     * @param index {Integer} Index of the item to remove.\n     */\n    removeAt : function(index)\n    {\n      this.__items.splice(index, 1);\n      this._removeHelper(this.__items[index]);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __itemToRow : function(item)\n    {\n      var row = this.__items.indexOf(item);\n      if (row < 0) {\n        return null;\n      } else {\n        return row;\n      }\n    },\n\n\n    __rowToItem : function(row)\n    {\n      var item = this.__items[row];\n      return item;\n    },\n\n\n    __itemsToRows : function(items)\n    {\n      var rows = [];\n      for (var i=0; i<items.length; i++) {\n        rows.push(this.__itemToRow(items[i]));\n      }\n      return rows;\n    },\n\n\n    __rowsToItems : function(rows)\n    {\n      var items = [];\n      for (var i=0; i<rows.length; i++) {\n        items.push(this.__items[rows[i]]);\n      }\n      return items;\n    },\n\n\n    /**\n     * Selects all items of the managed object.\n     */\n    selectAll : function() {\n      this.__selectionManager.selectAll();\n    },\n\n\n    /**\n     * Selects the given item. Replaces current selection\n     * completely with the new item.\n     *\n     * @param item {Object} Any valid item\n     * @return {void}\n     */\n    setSelected : function(item) {\n      this.__selectionManager.selectItem(this.__itemToRow(item));\n    },\n\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {Object} Any valid selectable item\n     * @return {Boolean} Whether the item is selected\n     */\n    isSelected : function(item) {\n      return this.__selectionManager.isItemSelected(this.__itemToRow(item));\n    },\n\n\n    /**\n     * Adds the given item to the existing selection.\n     *\n     * Use {@link #selectItem} instead if you want to replace\n     * the current selection.\n     *\n     * @param item {Object} Any valid item\n     * @return {void}\n     */\n    addToSelection : function(item) {\n      this.__selectionManager.addItem(this.__itemToRow(item));\n    },\n\n\n    /**\n     * Removes the given item from the selection.\n     *\n     * Use {@link #clearSelection} when you want to clear\n     * the whole selection at once.\n     *\n     * @param item {Object} Any valid item\n     * @return {void}\n     */\n    removeFromSelection : function(item) {\n      this.__selectionManager.removeItem(this.__itemToRow(item));\n    },\n\n\n    /**\n     * Selects an item range between two given items.\n     *\n     * @param begin {Object} Item to start with\n     * @param end {Object} Item to end at\n     * @return {void}\n     */\n    selectRange : function(begin, end) {\n      this.__selectionManager.selectItemRange(\n        this.__itemToRow(begin),\n        this.__itemToRow(end)\n      );\n    },\n\n\n    /**\n     * Clears the whole selection at once.\n     *\n     * @return {void}\n     */\n    resetSelection : function() {\n      this.__selectionManager.clearSelection();\n    },\n\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {Object} Items to select\n     * @return {void}\n     */\n    setSelection : function(items) {\n      this.__selectionManager.replaceSelection(this.__itemsToRows(items));\n    },\n\n\n    /**\n     * Get the selected item. This method does only work in <code>single</code>\n     * selection mode.\n     *\n     * @deprecated {3.0} Use 'getSelected' instead!\n     * @return {Object} The selected item.\n     */\n    getSelectedItem : function() {\n      return this.__items[this.getSelected()];\n    },\n\n\n    /**\n     * Get the selected item.\n     *\n     * @return {Object} The selected item.\n     */\n    getSelected : function() {\n      return this.__items[this.__selectionManager.getSelectedItem()];\n    },\n\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * @return {Object[]} List of items.\n     */\n    getSelection : function() {\n      return this.__rowsToItems(this.__selectionManager.getSelection());\n    },\n\n\n    /**\n     * Returns an array of currently selected items sorted\n     * by their index in the container.\n     *\n     * @return {Object[]} Sorted list of items\n     */\n    getSortedSelection : function() {\n      return this.__rowsToItems(this.__selectionManager.getSortedSelection());\n    },\n\n\n    /**\n     * Whether the selection is empty\n     *\n     * @return {Boolean} Whether the selection is empty\n     */\n    isSelectionEmpty : function() {\n      return this.__selectionManager.isSelectionEmpty();\n    },\n\n\n    /**\n     * Returns the last selection context. One of <code>tap</code>,\n     * <code>quick</code>, <code>drag</code> or <code>key</code> or\n     * <code>null</code>.\n     */\n    getSelectionContext : function() {\n      return this.__selectionManager.getSelectionContext();\n    },\n\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @return {LayoutItem[]} The contained items.\n     */\n    getSelectables: function() {\n      return this.__rowsToItems(this.__selectionManager.getSelectables());\n    },\n\n\n    // property apply\n    _applySelectionMode : function(value, old) {\n      this.__selectionManager.setMode(value);\n    },\n\n\n    // property apply\n    _applyDragSelection : function(value, old) {\n      this.__selectionManager.setDrag(value);\n    },\n\n\n    // property apply\n    _applyQuickSelection : function(value, old) {\n      this.__selectionManager.setQuick(value);\n    }\n  }\n});\n"
  ]
}